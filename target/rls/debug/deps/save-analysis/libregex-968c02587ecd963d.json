{"config":{"output_file":null,"full_docs":false,"pub_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"regex","disambiguator":[13712611465853903655,5743467837764639368]},"crate_root":"Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src","external_crates":[{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","num":17,"id":{"name":"lazy_static","disambiguator":[7523700146434935744,2127533111517569205]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","num":14,"id":{"name":"thread_local","disambiguator":[7464007280978703900,7167464467251213307]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","num":11,"id":{"name":"aho_corasick","disambiguator":[15219239259020591903,9792483394675489254]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","num":8,"id":{"name":"compiler_builtins","disambiguator":[12258243971646201430,5541661192865071085]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[7479594750673413303,11700248684352491790]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1278364905140336275,5704441828477959823]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","num":19,"id":{"name":"utf8_ranges","disambiguator":[15167397146550527995,12877168882820580762]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","num":16,"id":{"name":"void","disambiguator":[3224531472540657863,17748535581379383921]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","num":13,"id":{"name":"libc","disambiguator":[7641714553669186132,17489477030554114137]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[17326616259069988615,5881405958817750738]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7558149434501259724,6021108799824110139]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","num":4,"id":{"name":"std_unicode","disambiguator":[17905471521160427031,371260515587834027]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11150755745482094334,719635517261601720]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","num":18,"id":{"name":"regex_syntax","disambiguator":[17001558839405915876,14506838772584202439]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","num":15,"id":{"name":"unreachable","disambiguator":[3206905017870367681,9221102488513937306]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","num":12,"id":{"name":"memchr","disambiguator":[15791592761105330143,16170639496984725811]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","num":9,"id":{"name":"alloc_jemalloc","disambiguator":[1861138583033124199,6520321624619287261]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6042488491239327452,16464525334708618473]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","num":3,"id":{"name":"alloc","disambiguator":[18019394939438738377,3379744934773716244]}}],"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":472,"byte_end":22641,"line_start":11,"line_end":664,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1091},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17977,"byte_end":17982,"line_start":522,"line_end":522,"column_start":16,"column_end":21},"name":"Error","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18013,"byte_end":18014,"line_start":523,"line_end":523,"column_start":30,"column_end":31},"name":"*","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18049,"byte_end":18050,"line_start":524,"line_end":524,"column_start":34,"column_end":35},"name":"*","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18077,"byte_end":18078,"line_start":525,"line_end":525,"column_start":26,"column_end":27},"name":"*","value":""},{"kind":"Use","ref_id":{"krate":0,"index":772},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18098,"byte_end":18107,"line_start":526,"line_end":526,"column_start":19,"column_end":28},"name":"Locations","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21695,"byte_end":21696,"line_start":621,"line_end":621,"column_start":32,"column_end":33},"name":"*","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21733,"byte_end":21734,"line_start":622,"line_end":622,"column_start":36,"column_end":37},"name":"*","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21758,"byte_end":21759,"line_start":623,"line_end":623,"column_start":23,"column_end":24},"name":"*","value":""},{"kind":"GlobUse","ref_id":null,"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21788,"byte_end":21789,"line_start":624,"line_end":624,"column_start":28,"column_end":29},"name":"*","value":""},{"kind":"Use","ref_id":{"krate":0,"index":772},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21813,"byte_end":21822,"line_start":625,"line_end":625,"column_start":23,"column_end":32},"name":"Locations","value":""},{"kind":"Use","ref_id":{"krate":0,"index":97},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22440,"byte_end":22448,"line_start":659,"line_end":659,"column_start":22,"column_end":30},"name":"Compiler","value":""},{"kind":"Use","ref_id":{"krate":0,"index":1187},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22565,"byte_end":22580,"line_start":662,"line_end":662,"column_start":23,"column_end":38},"name":"LiteralSearcher","value":""}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":472,"byte_end":22641,"line_start":11,"line_end":664,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":32},{"krate":0,"index":56},{"krate":0,"index":67},{"krate":0,"index":164},{"krate":0,"index":271},{"krate":0,"index":281},{"krate":0,"index":393},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":493},{"krate":0,"index":570},{"krate":0,"index":585},{"krate":0,"index":610},{"krate":0,"index":649},{"krate":0,"index":654},{"krate":0,"index":768},{"krate":0,"index":770},{"krate":0,"index":807},{"krate":0,"index":922},{"krate":0,"index":932},{"krate":0,"index":950}],"decl_id":null,"docs":"This crate provides a library for parsing, compiling, and executing regular\nexpressions. Its syntax is similar to Perl-style regular expressions, but lacks\na few features like look around and backreferences. In exchange, all searches\nexecute in linear time with respect to the size of the regular expression and\nsearch text.","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17545,"byte_end":17567,"line_start":509,"line_end":509,"column_start":1,"column_end":23}},{"value":"feature(pattern)","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17636,"byte_end":17653,"line_start":511,"line_end":511,"column_start":34,"column_end":51}}]},{"kind":"Mod","id":{"krate":0,"index":26},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21656,"byte_end":21661,"line_start":620,"line_end":620,"column_start":9,"column_end":14},"name":"bytes","qualname":"::bytes","value":"Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31}],"decl_id":null,"docs":"Match regular expressions on arbitrary bytes.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":44},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":24542,"byte_end":24553,"line_start":41,"line_end":41,"column_start":8,"column_end":19},"name":"should_exec","qualname":"::backtrack::should_exec","value":"fn (num_insts: usize, text_len: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true iff the given regex and input should be executed by this\n engine with reasonable memory usage.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":966},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":25032,"byte_end":25039,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"Bounded","qualname":"::backtrack::Bounded","value":"Bounded {  }","parent":null,"children":[{"krate":0,"index":2147484018},{"krate":0,"index":2147484019},{"krate":0,"index":2147484020},{"krate":0,"index":2147484021},{"krate":0,"index":2147484022}],"decl_id":null,"docs":" A backtracking matching engine.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":969},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":25316,"byte_end":25321,"line_start":65,"line_end":65,"column_start":12,"column_end":17},"name":"Cache","qualname":"::backtrack::Cache","value":"Cache {  }","parent":null,"children":[{"krate":0,"index":2147484033},{"krate":0,"index":2147484034}],"decl_id":null,"docs":" Shared cached state between multiple invocations of a backtracking engine\n in the same thread.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":25455,"byte_end":25458,"line_start":72,"line_end":72,"column_start":12,"column_end":15},"name":"new","qualname":"<Cache>::new","value":"fn (_prog: &Program) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":26245,"byte_end":26249,"line_start":94,"line_end":94,"column_start":12,"column_end":16},"name":"exec","qualname":"<Bounded<'a, 'm, 'r, 's, I>>::exec","value":"fn (prog: &'r Program, cache: &ProgramCache, matches: &'m mut [bool], slots: &'s mut [Slot], input: I, start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":62},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,117,116,102,56,46,114,115],"byte_start":34769,"byte_end":34778,"line_start":24,"line_end":24,"column_start":8,"column_end":17},"name":"next_utf8","qualname":"::utf8::next_utf8","value":"fn (text: &[u8], i: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest possible index of the next valid UTF-8 sequence\n starting after `i`.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":63},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,117,116,102,56,46,114,115],"byte_start":35306,"byte_end":35317,"line_start":47,"line_end":47,"column_start":8,"column_end":19},"name":"encode_utf8","qualname":"::utf8::encode_utf8","value":"fn (character: char, dst: &mut [u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Encode the given Unicode character to `dst` as a single UTF-8 sequence.","sig":null,"attributes":[{"value":"allow(dead_code)","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,117,116,102,56,46,114,115],"byte_start":35269,"byte_end":35288,"line_start":45,"line_end":45,"column_start":1,"column_end":20}},{"value":"inline","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,117,116,102,56,46,114,115],"byte_start":35289,"byte_end":35298,"line_start":46,"line_end":46,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,117,116,102,56,46,114,115],"byte_start":36752,"byte_end":36763,"line_start":83,"line_end":83,"column_start":8,"column_end":19},"name":"decode_utf8","qualname":"::utf8::decode_utf8","value":"fn (src: &[u8]) -> Option<(char, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Decode a single UTF-8 sequence into a single Unicode codepoint from `src`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,117,116,102,56,46,114,115],"byte_start":36735,"byte_end":36744,"line_start":82,"line_end":82,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":65},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,117,116,102,56,46,114,115],"byte_start":39098,"byte_end":39114,"line_start":154,"line_end":154,"column_start":8,"column_end":24},"name":"decode_last_utf8","qualname":"::utf8::decode_last_utf8","value":"fn (src: &[u8]) -> Option<(char, usize)>","parent":null,"children":[],"decl_id":null,"docs":" Like `decode_utf8`, but decodes the last UTF-8 sequence in `src` instead\n of the first.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":97},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":44658,"byte_end":44666,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Compiler","qualname":"::compile::Compiler","value":"Compiler {  }","parent":null,"children":[{"krate":0,"index":2147483665},{"krate":0,"index":2147483666},{"krate":0,"index":2147483667},{"krate":0,"index":2147483668},{"krate":0,"index":2147483669},{"krate":0,"index":2147483670},{"krate":0,"index":2147483671},{"krate":0,"index":2147483672}],"decl_id":null,"docs":" A compiler translates a regular expression AST to a sequence of\n instructions. The sequence of instructions represents an NFA.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":45077,"byte_end":45080,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<Compiler>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":45675,"byte_end":45685,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"size_limit","qualname":"<Compiler>::size_limit","value":"fn (mut self, size_limit: usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":46429,"byte_end":46434,"line_start":86,"line_end":86,"column_start":12,"column_end":17},"name":"bytes","qualname":"<Compiler>::bytes","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":46717,"byte_end":46726,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"only_utf8","qualname":"<Compiler>::only_utf8","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":47209,"byte_end":47212,"line_start":107,"line_end":107,"column_start":12,"column_end":15},"name":"dfa","qualname":"<Compiler>::dfa","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":47447,"byte_end":47454,"line_start":114,"line_end":114,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Compiler>::reverse","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":47808,"byte_end":47815,"line_start":124,"line_end":124,"column_start":12,"column_end":19},"name":"compile","qualname":"<Compiler>::compile","value":"fn (mut self, exprs: &[Expr]) -> result::Result<Program, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":174},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":86891,"byte_end":86899,"line_start":66,"line_end":66,"column_start":8,"column_end":16},"name":"can_exec","qualname":"::dfa::can_exec","value":"fn (insts: &Program) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if and only if the given program can be executed by a DFA.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1026},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":87862,"byte_end":87867,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"name":"Cache","qualname":"::dfa::Cache","value":"Cache {  }","parent":null,"children":[{"krate":0,"index":2147484076},{"krate":0,"index":2147484077},{"krate":0,"index":2147484078}],"decl_id":null,"docs":" A reusable cache of DFA states.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1039},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":91845,"byte_end":91848,"line_start":179,"line_end":179,"column_start":12,"column_end":15},"name":"Fsm","qualname":"::dfa::Fsm","value":"Fsm {  }","parent":null,"children":[{"krate":0,"index":2147484088},{"krate":0,"index":2147484089},{"krate":0,"index":2147484090},{"krate":0,"index":2147484091},{"krate":0,"index":2147484092},{"krate":0,"index":2147484093},{"krate":0,"index":2147484094}],"decl_id":null,"docs":" Fsm encapsulates the actual execution of the DFA.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484097},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":93677,"byte_end":93682,"line_start":219,"line_end":219,"column_start":5,"column_end":10},"name":"Match","qualname":"::dfa::Result::Match","value":"Result::Match(T)","parent":{"krate":0,"index":1042},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484099},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":93691,"byte_end":93698,"line_start":220,"line_end":220,"column_start":5,"column_end":12},"name":"NoMatch","qualname":"::dfa::Result::NoMatch","value":"Result::NoMatch(usize)","parent":{"krate":0,"index":1042},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484101},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":93711,"byte_end":93715,"line_start":221,"line_end":221,"column_start":5,"column_end":9},"name":"Quit","qualname":"::dfa::Result::Quit","value":"Result::Quit","parent":{"krate":0,"index":1042},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1042},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":93661,"byte_end":93667,"line_start":218,"line_end":218,"column_start":10,"column_end":16},"name":"Result","qualname":"::dfa::Result","value":"Result::{Match, NoMatch, Quit}","parent":null,"children":[{"krate":0,"index":2147484097},{"krate":0,"index":2147484099},{"krate":0,"index":2147484101}],"decl_id":null,"docs":" The result of running the DFA.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":93811,"byte_end":93819,"line_start":226,"line_end":226,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Result<T>>::is_match","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":94105,"byte_end":94108,"line_start":236,"line_end":236,"column_start":12,"column_end":15},"name":"map","qualname":"<Result<T>>::map","value":"fn <U, F> (self, mut f: F) -> Result<U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":100765,"byte_end":100768,"line_start":425,"line_end":425,"column_start":12,"column_end":15},"name":"new","qualname":"<Cache>::new","value":"fn (prog: &Program) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":101875,"byte_end":101882,"line_start":459,"line_end":459,"column_start":12,"column_end":19},"name":"forward","qualname":"<Fsm<'a>>::forward","value":"fn (prog: &'a Program, cache: &ProgramCache, quit_after_match: bool, text: &[u8], at: usize) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":102926,"byte_end":102933,"line_start":492,"line_end":492,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Fsm<'a>>::reverse","value":"fn (prog: &'a Program, cache: &ProgramCache, quit_after_match: bool, text: &[u8], at: usize) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":104001,"byte_end":104013,"line_start":525,"line_end":525,"column_start":12,"column_end":24},"name":"forward_many","qualname":"<Fsm<'a>>::forward_many","value":"fn (prog: &'a Program, cache: &ProgramCache, matches: &mut [bool], text: &[u8], at: usize) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484119},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":157605,"byte_end":157611,"line_start":19,"line_end":19,"column_start":5,"column_end":11},"name":"Syntax","qualname":"::error::Error::Syntax","value":"Error::Syntax(String)","parent":{"krate":0,"index":1091},"children":[],"decl_id":null,"docs":" A syntax error.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484121},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":157731,"byte_end":157745,"line_start":22,"line_end":22,"column_start":5,"column_end":19},"name":"CompiledTooBig","qualname":"::error::Error::CompiledTooBig","value":"Error::CompiledTooBig(usize)","parent":{"krate":0,"index":1091},"children":[],"decl_id":null,"docs":" The compiled program exceeded the set size limit.\n The argument is the size limit imposed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484123},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":158032,"byte_end":158047,"line_start":29,"line_end":29,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::error::Error::__Nonexhaustive","value":"Error::__Nonexhaustive","parent":{"krate":0,"index":1091},"children":[],"decl_id":null,"docs":" Hints that destructuring should not be exhaustive.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1091},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":157569,"byte_end":157574,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"Error::{Syntax, CompiledTooBig, __Nonexhaustive}","parent":null,"children":[{"krate":0,"index":2147484119},{"krate":0,"index":2147484121},{"krate":0,"index":2147484123}],"decl_id":null,"docs":" An error that occurred during parsing or compiling a regular expression.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":311},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":160145,"byte_end":160149,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"Exec","qualname":"::exec::Exec","value":"Exec {  }","parent":null,"children":[{"krate":0,"index":2147483710},{"krate":0,"index":2147483711}],"decl_id":null,"docs":" `Exec` manages the execution of a regular expression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1099},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":160520,"byte_end":160530,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"ExecNoSync","qualname":"::exec::ExecNoSync","value":"ExecNoSync {  }","parent":null,"children":[{"krate":0,"index":2147484124},{"krate":0,"index":2147484125}],"decl_id":null,"docs":" `ExecNoSync` is like `Exec`, except it embeds a reference to a cache. This\n means it is no longer Sync, but we can now avoid the overhead of\n synchronization to fetch the cache.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":312},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":160769,"byte_end":160782,"line_start":58,"line_end":58,"column_start":12,"column_end":25},"name":"ExecNoSyncStr","qualname":"::exec::ExecNoSyncStr","value":"","parent":null,"children":[],"decl_id":null,"docs":" `ExecNoSyncStr` is like `ExecNoSync`, but matches on &str instead of &[u8].\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":313},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":162490,"byte_end":162501,"line_start":95,"line_end":95,"column_start":12,"column_end":23},"name":"ExecBuilder","qualname":"::exec::ExecBuilder","value":"ExecBuilder {  }","parent":null,"children":[{"krate":0,"index":2147483715},{"krate":0,"index":2147483716},{"krate":0,"index":2147483717},{"krate":0,"index":2147483718}],"decl_id":null,"docs":" Facilitates the construction of an executor by exposing various knobs\n to control how a regex is executed and what kinds of resources it's\n permitted to use.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":163103,"byte_end":163106,"line_start":117,"line_end":117,"column_start":12,"column_end":15},"name":"new","qualname":"<ExecBuilder>::new","value":"fn (re: &str) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":317},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":163432,"byte_end":163440,"line_start":126,"line_end":126,"column_start":12,"column_end":20},"name":"new_many","qualname":"<ExecBuilder>::new_many","value":"fn <I, S> (res: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":163740,"byte_end":163751,"line_start":134,"line_end":134,"column_start":12,"column_end":23},"name":"new_options","qualname":"<ExecBuilder>::new_options","value":"fn (opts: RegexOptions) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":319},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":164249,"byte_end":164258,"line_start":150,"line_end":150,"column_start":12,"column_end":21},"name":"automatic","qualname":"<ExecBuilder>::automatic","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":164573,"byte_end":164576,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"nfa","qualname":"<ExecBuilder>::nfa","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":165067,"byte_end":165087,"line_start":173,"line_end":173,"column_start":12,"column_end":32},"name":"bounded_backtracking","qualname":"<ExecBuilder>::bounded_backtracking","value":"fn (mut self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":165655,"byte_end":165660,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"bytes","qualname":"<ExecBuilder>::bytes","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":165931,"byte_end":165940,"line_start":196,"line_end":196,"column_start":12,"column_end":21},"name":"only_utf8","qualname":"<ExecBuilder>::only_utf8","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":166063,"byte_end":166070,"line_start":202,"line_end":202,"column_start":12,"column_end":19},"name":"unicode","qualname":"<ExecBuilder>::unicode","value":"fn (mut self, yes: bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":168950,"byte_end":168955,"line_start":273,"line_end":273,"column_start":12,"column_end":17},"name":"build","qualname":"<ExecBuilder>::build","value":"fn (self) -> Result<Exec, Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":368},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":194185,"byte_end":194200,"line_start":998,"line_end":998,"column_start":12,"column_end":27},"name":"many_matches_at","qualname":"<ExecNoSync<'c>>::many_matches_at","value":"fn (&self, matches: &mut [bool], text: &[u8], start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":195945,"byte_end":195961,"line_start":1052,"line_end":1052,"column_start":12,"column_end":28},"name":"capture_name_idx","qualname":"<ExecNoSync<'c>>::capture_name_idx","value":"fn (&self) -> &Arc<HashMap<String, usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":196090,"byte_end":196106,"line_start":1058,"line_end":1058,"column_start":12,"column_end":28},"name":"capture_name_idx","qualname":"<ExecNoSyncStr<'c>>::capture_name_idx","value":"fn (&self) -> &Arc<HashMap<String, usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":196305,"byte_end":196313,"line_start":1066,"line_end":1066,"column_start":12,"column_end":20},"name":"searcher","qualname":"<Exec>::searcher","value":"fn (&self) -> ExecNoSync","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":196704,"byte_end":196716,"line_start":1076,"line_end":1076,"column_start":12,"column_end":24},"name":"searcher_str","qualname":"<Exec>::searcher_str","value":"fn (&self) -> ExecNoSyncStr","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":196842,"byte_end":196852,"line_start":1081,"line_end":1081,"column_start":12,"column_end":22},"name":"into_regex","qualname":"<Exec>::into_regex","value":"fn (self) -> re_unicode::Regex","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":196983,"byte_end":196997,"line_start":1086,"line_end":1086,"column_start":12,"column_end":26},"name":"into_regex_set","qualname":"<Exec>::into_regex_set","value":"fn (self) -> re_set::unicode::RegexSet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":197172,"byte_end":197187,"line_start":1091,"line_end":1091,"column_start":12,"column_end":27},"name":"into_byte_regex","qualname":"<Exec>::into_byte_regex","value":"fn (self) -> re_bytes::Regex","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":197345,"byte_end":197364,"line_start":1096,"line_end":1096,"column_start":12,"column_end":31},"name":"into_byte_regex_set","qualname":"<Exec>::into_byte_regex_set","value":"fn (self) -> re_set::bytes::RegexSet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":197551,"byte_end":197564,"line_start":1102,"line_end":1102,"column_start":12,"column_end":25},"name":"regex_strings","qualname":"<Exec>::regex_strings","value":"fn (&self) -> &[String]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":197721,"byte_end":197734,"line_start":1109,"line_end":1109,"column_start":12,"column_end":25},"name":"capture_names","qualname":"<Exec>::capture_names","value":"fn (&self) -> &[Option<String>]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":197909,"byte_end":197925,"line_start":1115,"line_end":1115,"column_start":12,"column_end":28},"name":"capture_name_idx","qualname":"<Exec>::capture_name_idx","value":"fn (&self) -> &Arc<HashMap<String, usize>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":390},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":203312,"byte_end":203324,"line_start":1260,"line_end":1260,"column_start":10,"column_end":22},"name":"ProgramCache","qualname":"::exec::ProgramCache","value":"RefCell<ProgramCacheInner>","parent":null,"children":[],"decl_id":null,"docs":" `ProgramCache` maintains reusable allocations for each matching engine\n available to a particular program.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1123},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":203391,"byte_end":203408,"line_start":1263,"line_end":1263,"column_start":12,"column_end":29},"name":"ProgramCacheInner","qualname":"::exec::ProgramCacheInner","value":"ProgramCacheInner { pikevm, backtrack, dfa, dfa_reverse }","parent":null,"children":[{"krate":0,"index":2147484149},{"krate":0,"index":2147484150},{"krate":0,"index":2147484151},{"krate":0,"index":2147484152}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484149},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":203419,"byte_end":203425,"line_start":1264,"line_end":1264,"column_start":9,"column_end":15},"name":"pikevm","qualname":"::exec::ProgramCacheInner::pikevm","value":"pikevm::Cache","parent":{"krate":0,"index":1123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484150},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":203450,"byte_end":203459,"line_start":1265,"line_end":1265,"column_start":9,"column_end":18},"name":"backtrack","qualname":"::exec::ProgramCacheInner::backtrack","value":"backtrack::Cache","parent":{"krate":0,"index":1123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484151},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":203487,"byte_end":203490,"line_start":1266,"line_end":1266,"column_start":9,"column_end":12},"name":"dfa","qualname":"::exec::ProgramCacheInner::dfa","value":"dfa::Cache","parent":{"krate":0,"index":1123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484152},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":203512,"byte_end":203523,"line_start":1267,"line_end":1267,"column_start":9,"column_end":20},"name":"dfa_reverse","qualname":"::exec::ProgramCacheInner::dfa_reverse","value":"dfa::Cache","parent":{"krate":0,"index":1123},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":398},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,112,97,110,100,46,114,115],"byte_start":203932,"byte_end":203942,"line_start":8,"line_end":8,"column_start":8,"column_end":18},"name":"expand_str","qualname":"::expand::expand_str","value":"fn (caps: &re_unicode::Captures, mut replacement: &str, dst: &mut String) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":399},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,112,97,110,100,46,114,115],"byte_start":205203,"byte_end":205215,"line_start":50,"line_end":50,"column_start":8,"column_end":20},"name":"expand_bytes","qualname":"::expand::expand_bytes","value":"fn (caps: &re_bytes::Captures, mut replacement: &[u8], dst: &mut Vec<u8>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":407},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,102,114,101,113,115,46,114,115],"byte_start":210477,"byte_end":210493,"line_start":14,"line_end":14,"column_start":11,"column_end":27},"name":"BYTE_FREQUENCIES","qualname":"::freqs::BYTE_FREQUENCIES","value":"[u8; 256]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1150},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":215647,"byte_end":215654,"line_start":25,"line_end":25,"column_start":12,"column_end":19},"name":"InputAt","qualname":"::input::InputAt","value":"InputAt {  }","parent":null,"children":[{"krate":0,"index":2147484171},{"krate":0,"index":2147484172},{"krate":0,"index":2147484173},{"krate":0,"index":2147484174}],"decl_id":null,"docs":" Represents a location in the input.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":215636,"byte_end":215725,"line_start":25,"line_end":30,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":215826,"byte_end":215834,"line_start":34,"line_end":34,"column_start":12,"column_end":20},"name":"is_start","qualname":"<InputAt>::is_start","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":215961,"byte_end":215967,"line_start":39,"line_end":39,"column_start":12,"column_end":18},"name":"is_end","qualname":"<InputAt>::is_end","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":216213,"byte_end":216217,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"char","qualname":"<InputAt>::char","value":"fn (&self) -> Char","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":216311,"byte_end":216315,"line_start":52,"line_end":52,"column_start":12,"column_end":16},"name":"byte","qualname":"<InputAt>::byte","value":"fn (&self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":425},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":216442,"byte_end":216445,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"len","qualname":"<InputAt>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":216590,"byte_end":216598,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<InputAt>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":216706,"byte_end":216709,"line_start":68,"line_end":68,"column_start":12,"column_end":15},"name":"pos","qualname":"<InputAt>::pos","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":428},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":216830,"byte_end":216838,"line_start":73,"line_end":73,"column_start":12,"column_end":20},"name":"next_pos","qualname":"<InputAt>::next_pos","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":429},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":216964,"byte_end":216969,"line_start":79,"line_end":79,"column_start":11,"column_end":16},"name":"Input","qualname":"::input::Input","value":"Input","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":436},{"krate":0,"index":437}],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":217042,"byte_end":217044,"line_start":81,"line_end":81,"column_start":8,"column_end":10},"name":"at","qualname":"::input::Input::at","value":"fn (&self, i: usize) -> InputAt","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":217221,"byte_end":217230,"line_start":86,"line_end":86,"column_start":8,"column_end":17},"name":"next_char","qualname":"::input::Input::next_char","value":"fn (&self, at: InputAt) -> Char","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":217411,"byte_end":217424,"line_start":91,"line_end":91,"column_start":8,"column_end":21},"name":"previous_char","qualname":"::input::Input::previous_char","value":"fn (&self, at: InputAt) -> Char","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":217564,"byte_end":217578,"line_start":95,"line_end":95,"column_start":8,"column_end":22},"name":"is_empty_match","qualname":"::input::Input::is_empty_match","value":"fn (&self, at: InputAt, empty: &InstEmptyLook) -> bool","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":217685,"byte_end":217694,"line_start":98,"line_end":98,"column_start":8,"column_end":17},"name":"prefix_at","qualname":"::input::Input::prefix_at","value":"fn (&self, prefixes: &LiteralSearcher, at: InputAt) -> Option<InputAt>","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":217844,"byte_end":217847,"line_start":105,"line_end":105,"column_start":8,"column_end":11},"name":"len","qualname":"::input::Input::len","value":"fn (&self) -> usize","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":436},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":217909,"byte_end":217917,"line_start":108,"line_end":108,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::input::Input::is_empty","value":"fn (&self) -> bool","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":218016,"byte_end":218024,"line_start":111,"line_end":111,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::input::Input::as_bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":" An abstraction over input used in the matching engines.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1156},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":218768,"byte_end":218777,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"CharInput","qualname":"::input::CharInput","value":"","parent":null,"children":[],"decl_id":null,"docs":" An input reader over characters.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":218757,"byte_end":218792,"line_start":140,"line_end":140,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":218896,"byte_end":218899,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"new","qualname":"<CharInput<'t>>::new","value":"fn (s: &'t [u8]) -> CharInput<'t>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1162},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":221160,"byte_end":221169,"line_start":227,"line_end":227,"column_start":12,"column_end":21},"name":"ByteInput","qualname":"::input::ByteInput","value":"ByteInput {  }","parent":null,"children":[{"krate":0,"index":2147484181},{"krate":0,"index":2147484182}],"decl_id":null,"docs":" An input reader over bytes.\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":221149,"byte_end":221218,"line_start":227,"line_end":230,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":221323,"byte_end":221326,"line_start":234,"line_end":234,"column_start":12,"column_end":15},"name":"new","qualname":"<ByteInput<'t>>::new","value":"fn (text: &'t [u8], only_utf8: bool) -> ByteInput<'t>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1168},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":224841,"byte_end":224845,"line_start":346,"line_end":346,"column_start":12,"column_end":16},"name":"Char","qualname":"::input::Char","value":"","parent":null,"children":[],"decl_id":null,"docs":" An inline representation of `Option<char>`.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":224830,"byte_end":224851,"line_start":346,"line_end":346,"column_start":1,"column_end":22}},{"value":"rustc_copy_clone_marker","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":224830,"byte_end":224851,"line_start":346,"line_end":346,"column_start":1,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":225169,"byte_end":225176,"line_start":360,"line_end":360,"column_start":12,"column_end":19},"name":"is_none","qualname":"<Char>::is_none","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":478},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":225368,"byte_end":225376,"line_start":366,"line_end":366,"column_start":12,"column_end":20},"name":"len_utf8","qualname":"<Char>::len_utf8","value":"fn (self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":225599,"byte_end":225611,"line_start":373,"line_end":373,"column_start":12,"column_end":24},"name":"is_word_char","qualname":"<Char>::is_word_char","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":225826,"byte_end":225838,"line_start":380,"line_end":380,"column_start":12,"column_end":24},"name":"is_word_byte","qualname":"<Char>::is_word_byte","value":"fn (self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1187},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":227766,"byte_end":227781,"line_start":28,"line_end":28,"column_start":12,"column_end":27},"name":"LiteralSearcher","qualname":"::literals::LiteralSearcher","value":"LiteralSearcher {  }","parent":null,"children":[{"krate":0,"index":2147484190},{"krate":0,"index":2147484191},{"krate":0,"index":2147484192},{"krate":0,"index":2147484193}],"decl_id":null,"docs":" A prefix extracted from a compiled regular expression.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":228558,"byte_end":228563,"line_start":54,"line_end":54,"column_start":12,"column_end":17},"name":"empty","qualname":"<LiteralSearcher>::empty","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":511},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":228722,"byte_end":228730,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"prefixes","qualname":"<LiteralSearcher>::prefixes","value":"fn (lits: syntax::Literals) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":228931,"byte_end":228939,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"suffixes","qualname":"<LiteralSearcher>::suffixes","value":"fn (lits: syntax::Literals) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":229816,"byte_end":229824,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"complete","qualname":"<LiteralSearcher>::complete","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":230020,"byte_end":230024,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"find","qualname":"<LiteralSearcher>::find","value":"fn (&self, haystack: &[u8]) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":230644,"byte_end":230654,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"find_start","qualname":"<LiteralSearcher>::find_start","value":"fn (&self, haystack: &[u8]) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":231042,"byte_end":231050,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"find_end","qualname":"<LiteralSearcher>::find_end","value":"fn (&self, haystack: &[u8]) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":231475,"byte_end":231479,"line_start":131,"line_end":131,"column_start":12,"column_end":16},"name":"iter","qualname":"<LiteralSearcher>::iter","value":"fn (&self) -> LiteralIter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":520},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":232083,"byte_end":232086,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"lcp","qualname":"<LiteralSearcher>::lcp","value":"fn (&self) -> &FreqyPacked","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":232221,"byte_end":232224,"line_start":150,"line_end":150,"column_start":12,"column_end":15},"name":"lcs","qualname":"<LiteralSearcher>::lcs","value":"fn (&self) -> &FreqyPacked","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":232333,"byte_end":232341,"line_start":155,"line_end":155,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<LiteralSearcher>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":232457,"byte_end":232460,"line_start":160,"line_end":160,"column_start":12,"column_end":15},"name":"len","qualname":"<LiteralSearcher>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":525},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":232850,"byte_end":232866,"line_start":173,"line_end":173,"column_start":12,"column_end":28},"name":"approximate_size","qualname":"<LiteralSearcher>::approximate_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147483771},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":235772,"byte_end":235777,"line_start":246,"line_end":246,"column_start":5,"column_end":10},"name":"Empty","qualname":"::literals::LiteralIter::Empty","value":"LiteralIter::Empty","parent":{"krate":0,"index":532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147483772},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":235783,"byte_end":235788,"line_start":247,"line_end":247,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::literals::LiteralIter::Bytes","value":"LiteralIter::Bytes(&'a [u8])","parent":{"krate":0,"index":532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147483774},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":235804,"byte_end":235810,"line_start":248,"line_end":248,"column_start":5,"column_end":11},"name":"Single","qualname":"::literals::LiteralIter::Single","value":"LiteralIter::Single(&'a [u8])","parent":{"krate":0,"index":532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147483776},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":235826,"byte_end":235828,"line_start":249,"line_end":249,"column_start":5,"column_end":7},"name":"AC","qualname":"::literals::LiteralIter::AC","value":"LiteralIter::AC(&'a [syntax::Lit])","parent":{"krate":0,"index":532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147483778},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":235853,"byte_end":235861,"line_start":250,"line_end":250,"column_start":5,"column_end":13},"name":"Teddy128","qualname":"::literals::LiteralIter::Teddy128","value":"LiteralIter::Teddy128(&'a [Vec<u8>])","parent":{"krate":0,"index":532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":532},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":235750,"byte_end":235761,"line_start":245,"line_end":245,"column_start":10,"column_end":21},"name":"LiteralIter","qualname":"::literals::LiteralIter","value":"LiteralIter::{Empty, Bytes, Single, AC, Teddy128}","parent":null,"children":[{"krate":0,"index":2147483771},{"krate":0,"index":2147483772},{"krate":0,"index":2147483774},{"krate":0,"index":2147483776},{"krate":0,"index":2147483778}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1202},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":240187,"byte_end":240198,"line_start":390,"line_end":390,"column_start":12,"column_end":23},"name":"FreqyPacked","qualname":"::literals::FreqyPacked","value":"FreqyPacked {  }","parent":null,"children":[{"krate":0,"index":2147484209},{"krate":0,"index":2147484210},{"krate":0,"index":2147484211},{"krate":0,"index":2147484212},{"krate":0,"index":2147484213},{"krate":0,"index":2147484214}],"decl_id":null,"docs":" Provides an implementation of fast subtring search using frequency\n analysis.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":242641,"byte_end":242645,"line_start":466,"line_end":466,"column_start":12,"column_end":16},"name":"find","qualname":"<FreqyPacked>::find","value":"fn (&self, haystack: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":243473,"byte_end":243482,"line_start":492,"line_end":492,"column_start":12,"column_end":21},"name":"is_suffix","qualname":"<FreqyPacked>::is_suffix","value":"fn (&self, text: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":243657,"byte_end":243660,"line_start":499,"line_end":499,"column_start":12,"column_end":15},"name":"len","qualname":"<FreqyPacked>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":243720,"byte_end":243728,"line_start":503,"line_end":503,"column_start":12,"column_end":20},"name":"char_len","qualname":"<FreqyPacked>::char_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1207},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":245919,"byte_end":245935,"line_start":556,"line_end":556,"column_start":12,"column_end":28},"name":"BoyerMooreSearch","qualname":"::literals::BoyerMooreSearch","value":"BoyerMooreSearch {  }","parent":null,"children":[{"krate":0,"index":2147484215},{"krate":0,"index":2147484216},{"krate":0,"index":2147484217},{"krate":0,"index":2147484218},{"krate":0,"index":2147484219}],"decl_id":null,"docs":" An implementation of Tuned Boyer-Moore as laid out by\n Andrew Hume and Daniel Sunday in \"Fast String Searching\".\n O(n) in the size of the input.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":578},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,97,116,116,101,114,110,46,114,115],"byte_start":263816,"byte_end":263829,"line_start":5,"line_end":5,"column_start":12,"column_end":25},"name":"RegexSearcher","qualname":"::pattern::RegexSearcher","value":"RegexSearcher {  }","parent":null,"children":[{"krate":0,"index":2147483786},{"krate":0,"index":2147483787},{"krate":0,"index":2147483788},{"krate":0,"index":2147483789}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1212},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,105,107,101,118,109,46,114,115],"byte_start":267099,"byte_end":267102,"line_start":38,"line_end":38,"column_start":12,"column_end":15},"name":"Fsm","qualname":"::pikevm::Fsm","value":"Fsm {  }","parent":null,"children":[{"krate":0,"index":2147484220},{"krate":0,"index":2147484221},{"krate":0,"index":2147484222}],"decl_id":null,"docs":" An NFA simulation matching engine.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1215},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,105,107,101,118,109,46,114,115],"byte_start":267586,"byte_end":267591,"line_start":52,"line_end":52,"column_start":12,"column_end":17},"name":"Cache","qualname":"::pikevm::Cache","value":"Cache {  }","parent":null,"children":[{"krate":0,"index":2147484227},{"krate":0,"index":2147484228},{"krate":0,"index":2147484229}],"decl_id":null,"docs":" A cached allocation that can be reused on each execution.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,105,107,101,118,109,46,114,115],"byte_start":268760,"byte_end":268763,"line_start":88,"line_end":88,"column_start":12,"column_end":15},"name":"new","qualname":"<Cache>::new","value":"fn (_prog: &Program) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,105,107,101,118,109,46,114,115],"byte_start":269119,"byte_end":269123,"line_start":102,"line_end":102,"column_start":12,"column_end":16},"name":"exec","qualname":"<Fsm<'r, I>>::exec","value":"fn (prog: &'r Program, cache: &ProgramCache, matches: &mut [bool], slots: &mut [Slot], quit_after_match: bool, input: I, start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":620},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":278968,"byte_end":278975,"line_start":13,"line_end":13,"column_start":10,"column_end":17},"name":"InstPtr","qualname":"::prog::InstPtr","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" `InstPtr` represents the index of an instruction in a regex program.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1230},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":279103,"byte_end":279110,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"Program","qualname":"::prog::Program","value":"Program { insts, matches, captures, capture_name_idx, start, byte_classes, only_utf8, is_bytes, is_dfa, is_reverse, is_anchored_start, is_anchored_end, has_unicode_word_boundary, prefixes, dfa_size_limit }","parent":null,"children":[{"krate":0,"index":2147484238},{"krate":0,"index":2147484239},{"krate":0,"index":2147484240},{"krate":0,"index":2147484241},{"krate":0,"index":2147484242},{"krate":0,"index":2147484243},{"krate":0,"index":2147484244},{"krate":0,"index":2147484245},{"krate":0,"index":2147484246},{"krate":0,"index":2147484247},{"krate":0,"index":2147484248},{"krate":0,"index":2147484249},{"krate":0,"index":2147484250},{"krate":0,"index":2147484251},{"krate":0,"index":2147484252}],"decl_id":null,"docs":" Program is a sequence of instructions and various facts about thos\n instructions.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484238},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":279180,"byte_end":279185,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"name":"insts","qualname":"::prog::Program::insts","value":"std::vec::Vec<prog::Inst>","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" A sequence of instructions that represents an NFA.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484239},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":279350,"byte_end":279357,"line_start":24,"line_end":24,"column_start":9,"column_end":16},"name":"matches","qualname":"::prog::Program::matches","value":"std::vec::Vec<usize>","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Pointers to each Match instruction in the sequence.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484240},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":279491,"byte_end":279499,"line_start":27,"line_end":27,"column_start":9,"column_end":17},"name":"captures","qualname":"::prog::Program::captures","value":"std::vec::Vec<std::option::Option<std::string::String>>","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" The ordered sequence of all capture groups extracted from the AST.\n Unnamed groups are `None`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484241},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":279592,"byte_end":279608,"line_start":29,"line_end":29,"column_start":9,"column_end":25},"name":"capture_name_idx","qualname":"::prog::Program::capture_name_idx","value":"std::sync::Arc<std::collections::HashMap<std::string::String, usize>>","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Pointers to all named capture groups into `captures`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484242},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":279965,"byte_end":279970,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"start","qualname":"::prog::Program::start","value":"usize","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" A pointer to the start instruction. This can vary depending on how\n the program was compiled. For example, programs for use with the DFA\n engine have a `.*?` inserted at the beginning of unanchored regular\n expressions. The actual starting point of the program is after the\n `.*?`.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484243},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":280084,"byte_end":280096,"line_start":38,"line_end":38,"column_start":9,"column_end":21},"name":"byte_classes","qualname":"::prog::Program::byte_classes","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" A set of equivalence classes for discriminating bytes in the compiled\n program.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484244},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":280175,"byte_end":280184,"line_start":40,"line_end":40,"column_start":9,"column_end":18},"name":"only_utf8","qualname":"::prog::Program::only_utf8","value":"bool","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" When true, this program can only match valid UTF-8.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484245},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":280308,"byte_end":280316,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"name":"is_bytes","qualname":"::prog::Program::is_bytes","value":"bool","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" When true, this program uses byte range instructions instead of Unicode\n range instructions.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484246},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":280505,"byte_end":280511,"line_start":47,"line_end":47,"column_start":9,"column_end":15},"name":"is_dfa","qualname":"::prog::Program::is_dfa","value":"bool","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" When true, the program is compiled for DFA matching. For example, this\n implies `is_bytes` and also inserts a preceding `.*?` for unanchored\n regexes.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484247},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":280617,"byte_end":280627,"line_start":50,"line_end":50,"column_start":9,"column_end":19},"name":"is_reverse","qualname":"::prog::Program::is_reverse","value":"bool","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" When true, the program matches text in reverse (for use only in the\n DFA).\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484248},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":280709,"byte_end":280726,"line_start":52,"line_end":52,"column_start":9,"column_end":26},"name":"is_anchored_start","qualname":"::prog::Program::is_anchored_start","value":"bool","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Whether the regex must match from the start of the input.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484249},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":280804,"byte_end":280819,"line_start":54,"line_end":54,"column_start":9,"column_end":24},"name":"is_anchored_end","qualname":"::prog::Program::is_anchored_end","value":"bool","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Whether the regex must match at the end of the input.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484250},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":280910,"byte_end":280935,"line_start":56,"line_end":56,"column_start":9,"column_end":34},"name":"has_unicode_word_boundary","qualname":"::prog::Program::has_unicode_word_boundary","value":"bool","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" Whether this program contains a Unicode word boundary instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484251},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":281027,"byte_end":281035,"line_start":58,"line_end":58,"column_start":9,"column_end":17},"name":"prefixes","qualname":"::prog::Program::prefixes","value":"literals::LiteralSearcher","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" A possibly empty machine for very quickly matching prefix literals.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484252},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":281862,"byte_end":281876,"line_start":74,"line_end":74,"column_start":9,"column_end":23},"name":"dfa_size_limit","qualname":"::prog::Program::dfa_size_limit","value":"usize","parent":{"krate":0,"index":1230},"children":[],"decl_id":null,"docs":" A limit on the size of the cache that the DFA is allowed to use while\n matching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":282002,"byte_end":282005,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<Program>::new","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":282720,"byte_end":282724,"line_start":102,"line_end":102,"column_start":12,"column_end":16},"name":"skip","qualname":"<Program>::skip","value":"fn (&self, mut pc: usize) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":283038,"byte_end":283052,"line_start":113,"line_end":113,"column_start":12,"column_end":26},"name":"leads_to_match","qualname":"<Program>::leads_to_match","value":"fn (&self, pc: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":283578,"byte_end":283591,"line_start":128,"line_end":128,"column_start":12,"column_end":25},"name":"needs_dotstar","qualname":"<Program>::needs_dotstar","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":283798,"byte_end":283808,"line_start":134,"line_end":134,"column_start":12,"column_end":22},"name":"uses_bytes","qualname":"<Program>::uses_bytes","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":284043,"byte_end":284052,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"only_utf8","qualname":"<Program>::only_utf8","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":284200,"byte_end":284216,"line_start":147,"line_end":147,"column_start":12,"column_end":28},"name":"approximate_size","qualname":"<Program>::approximate_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484253},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":289051,"byte_end":289056,"line_start":269,"line_end":269,"column_start":5,"column_end":10},"name":"Match","qualname":"::prog::Inst::Match","value":"Inst::Match(usize)","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Match indicates that the program has reached a match state.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484255},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":289186,"byte_end":289190,"line_start":272,"line_end":272,"column_start":5,"column_end":9},"name":"Save","qualname":"::prog::Inst::Save","value":"Inst::Save(InstSave)","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Save causes the program to save the current location of the input in\n the slot indicated by InstSave.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484257},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":289325,"byte_end":289330,"line_start":275,"line_end":275,"column_start":5,"column_end":10},"name":"Split","qualname":"::prog::Inst::Split","value":"Inst::Split(InstSplit)","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Split causes the program to diverge to one of two paths in the\n program, preferring goto1 in InstSplit.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484259},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":289490,"byte_end":289499,"line_start":278,"line_end":278,"column_start":5,"column_end":14},"name":"EmptyLook","qualname":"::prog::Inst::EmptyLook","value":"Inst::EmptyLook(InstEmptyLook)","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" EmptyLook represents a zero-width assertion in a regex program. A\n zero-width assertion does not consume any of the input text.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484261},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":289641,"byte_end":289645,"line_start":281,"line_end":281,"column_start":5,"column_end":9},"name":"Char","qualname":"::prog::Inst::Char","value":"Inst::Char(InstChar)","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Char requires the regex program to match the character in InstChar at\n the current position in the input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484263},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":289819,"byte_end":289825,"line_start":284,"line_end":284,"column_start":5,"column_end":11},"name":"Ranges","qualname":"::prog::Inst::Ranges","value":"Inst::Ranges(InstRanges)","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Ranges requires the regex program to match the character at the current\n position in the input with one of the ranges specified in InstRanges.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484265},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":290023,"byte_end":290028,"line_start":288,"line_end":288,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::prog::Inst::Bytes","value":"Inst::Bytes(InstBytes)","parent":{"krate":0,"index":1233},"children":[],"decl_id":null,"docs":" Bytes is like Ranges, except it expresses a single byte range. It is\n used in conjunction with Split instructions to implement multi-byte\n character classes.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1233},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":288622,"byte_end":288626,"line_start":261,"line_end":261,"column_start":10,"column_end":14},"name":"Inst","qualname":"::prog::Inst","value":"Inst::{Match, Save, Split, EmptyLook, Char, Ranges, Bytes}","parent":null,"children":[{"krate":0,"index":2147484253},{"krate":0,"index":2147484255},{"krate":0,"index":2147484257},{"krate":0,"index":2147484259},{"krate":0,"index":2147484261},{"krate":0,"index":2147484263},{"krate":0,"index":2147484265}],"decl_id":null,"docs":" Inst is an instruction code in a Regex program.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":643},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":290132,"byte_end":290140,"line_start":293,"line_end":293,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Inst>::is_match","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1238},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":290338,"byte_end":290346,"line_start":303,"line_end":303,"column_start":12,"column_end":20},"name":"InstSave","qualname":"::prog::InstSave","value":"InstSave { goto, slot }","parent":null,"children":[{"krate":0,"index":2147484267},{"krate":0,"index":2147484268}],"decl_id":null,"docs":" Representation of the Save instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484267},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":290410,"byte_end":290414,"line_start":305,"line_end":305,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstSave::goto","value":"usize","parent":{"krate":0,"index":1238},"children":[],"decl_id":null,"docs":" The next location to execute in the program.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484268},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":290569,"byte_end":290573,"line_start":308,"line_end":308,"column_start":9,"column_end":13},"name":"slot","qualname":"::prog::InstSave::slot","value":"usize","parent":{"krate":0,"index":1238},"children":[],"decl_id":null,"docs":" The capture slot (there are two slots for every capture in a regex,\n including the zeroth capture for the entire match).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1243},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":290665,"byte_end":290674,"line_start":313,"line_end":313,"column_start":12,"column_end":21},"name":"InstSplit","qualname":"::prog::InstSplit","value":"InstSplit { goto1, goto2 }","parent":null,"children":[{"krate":0,"index":2147484269},{"krate":0,"index":2147484270}],"decl_id":null,"docs":" Representation of the Split instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484269},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":290830,"byte_end":290835,"line_start":316,"line_end":316,"column_start":9,"column_end":14},"name":"goto1","qualname":"::prog::InstSplit::goto1","value":"usize","parent":{"krate":0,"index":1243},"children":[],"decl_id":null,"docs":" The first instruction to try. A match resulting from following goto1\n has precedence over a match resulting from following goto2.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484270},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":291000,"byte_end":291005,"line_start":319,"line_end":319,"column_start":9,"column_end":14},"name":"goto2","qualname":"::prog::InstSplit::goto2","value":"usize","parent":{"krate":0,"index":1243},"children":[],"decl_id":null,"docs":" The second instruction to try. A match resulting from following goto1\n has precedence over a match resulting from following goto2.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1248},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":291105,"byte_end":291118,"line_start":324,"line_end":324,"column_start":12,"column_end":25},"name":"InstEmptyLook","qualname":"::prog::InstEmptyLook","value":"InstEmptyLook { goto, look }","parent":null,"children":[{"krate":0,"index":2147484271},{"krate":0,"index":2147484272}],"decl_id":null,"docs":" Representation of the `EmptyLook` instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484271},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":291219,"byte_end":291223,"line_start":327,"line_end":327,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstEmptyLook::goto","value":"usize","parent":{"krate":0,"index":1248},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484272},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":291293,"byte_end":291297,"line_start":329,"line_end":329,"column_start":9,"column_end":13},"name":"look","qualname":"::prog::InstEmptyLook::look","value":"prog::EmptyLook","parent":{"krate":0,"index":1248},"children":[],"decl_id":null,"docs":" The type of zero-width assertion to check.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484273},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":291461,"byte_end":291470,"line_start":336,"line_end":336,"column_start":5,"column_end":14},"name":"StartLine","qualname":"::prog::EmptyLook::StartLine","value":"EmptyLook::StartLine","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Start of line or input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484274},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":291506,"byte_end":291513,"line_start":338,"line_end":338,"column_start":5,"column_end":12},"name":"EndLine","qualname":"::prog::EmptyLook::EndLine","value":"EmptyLook::EndLine","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" End of line or input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484275},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":291543,"byte_end":291552,"line_start":340,"line_end":340,"column_start":5,"column_end":14},"name":"StartText","qualname":"::prog::EmptyLook::StartText","value":"EmptyLook::StartText","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Start of input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484276},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":291580,"byte_end":291587,"line_start":342,"line_end":342,"column_start":5,"column_end":12},"name":"EndText","qualname":"::prog::EmptyLook::EndText","value":"EmptyLook::EndText","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" End of input.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484277},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":291661,"byte_end":291673,"line_start":344,"line_end":344,"column_start":5,"column_end":17},"name":"WordBoundary","qualname":"::prog::EmptyLook::WordBoundary","value":"EmptyLook::WordBoundary","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Word character on one side and non-word character on other.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484278},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":291753,"byte_end":291768,"line_start":346,"line_end":346,"column_start":5,"column_end":20},"name":"NotWordBoundary","qualname":"::prog::EmptyLook::NotWordBoundary","value":"EmptyLook::NotWordBoundary","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Word character on both sides or non-word character on both sides.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484279},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":291803,"byte_end":291820,"line_start":348,"line_end":348,"column_start":5,"column_end":22},"name":"WordBoundaryAscii","qualname":"::prog::EmptyLook::WordBoundaryAscii","value":"EmptyLook::WordBoundaryAscii","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" ASCII word boundary.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2147484280},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":291859,"byte_end":291879,"line_start":350,"line_end":350,"column_start":5,"column_end":25},"name":"NotWordBoundaryAscii","qualname":"::prog::EmptyLook::NotWordBoundaryAscii","value":"EmptyLook::NotWordBoundaryAscii","parent":{"krate":0,"index":1253},"children":[],"decl_id":null,"docs":" Not ASCII word boundary.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1253},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":291413,"byte_end":291422,"line_start":334,"line_end":334,"column_start":10,"column_end":19},"name":"EmptyLook","qualname":"::prog::EmptyLook","value":"EmptyLook::{StartLine, EndLine, StartText, EndText, WordBoundary, NotWordBoundary, WordBoundaryAscii, NotWordBoundaryAscii}","parent":null,"children":[{"krate":0,"index":2147484273},{"krate":0,"index":2147484274},{"krate":0,"index":2147484275},{"krate":0,"index":2147484276},{"krate":0,"index":2147484277},{"krate":0,"index":2147484278},{"krate":0,"index":2147484279},{"krate":0,"index":2147484280}],"decl_id":null,"docs":" The set of zero-width match instructions.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":291404,"byte_end":291882,"line_start":334,"line_end":351,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":291404,"byte_end":291882,"line_start":334,"line_end":351,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":1263},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":291963,"byte_end":291971,"line_start":355,"line_end":355,"column_start":12,"column_end":20},"name":"InstChar","qualname":"::prog::InstChar","value":"InstChar { goto, c }","parent":null,"children":[{"krate":0,"index":2147484281},{"krate":0,"index":2147484282}],"decl_id":null,"docs":" Representation of the Char instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484281},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":292072,"byte_end":292076,"line_start":358,"line_end":358,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstChar::goto","value":"usize","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484282},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":292126,"byte_end":292127,"line_start":360,"line_end":360,"column_start":9,"column_end":10},"name":"c","qualname":"::prog::InstChar::c","value":"char","parent":{"krate":0,"index":1263},"children":[],"decl_id":null,"docs":" The character to test.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1268},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":292219,"byte_end":292229,"line_start":365,"line_end":365,"column_start":12,"column_end":22},"name":"InstRanges","qualname":"::prog::InstRanges","value":"InstRanges { goto, ranges }","parent":null,"children":[{"krate":0,"index":2147484283},{"krate":0,"index":2147484284}],"decl_id":null,"docs":" Representation of the Ranges instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484283},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":292330,"byte_end":292334,"line_start":368,"line_end":368,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstRanges::goto","value":"usize","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484284},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":292409,"byte_end":292415,"line_start":370,"line_end":370,"column_start":9,"column_end":15},"name":"ranges","qualname":"::prog::InstRanges::ranges","value":"std::vec::Vec<(char, char)>","parent":{"krate":0,"index":1268},"children":[],"decl_id":null,"docs":" The set of Unicode scalar value ranges to test.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":645},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":292542,"byte_end":292549,"line_start":375,"line_end":375,"column_start":12,"column_end":19},"name":"matches","qualname":"<InstRanges>::matches","value":"fn (&self, c: Char) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":646},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":293335,"byte_end":293344,"line_start":400,"line_end":400,"column_start":12,"column_end":21},"name":"num_chars","qualname":"<InstRanges>::num_chars","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1273},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":293599,"byte_end":293608,"line_start":410,"line_end":410,"column_start":12,"column_end":21},"name":"InstBytes","qualname":"::prog::InstBytes","value":"InstBytes { goto, start, end }","parent":null,"children":[{"krate":0,"index":2147484285},{"krate":0,"index":2147484286},{"krate":0,"index":2147484287}],"decl_id":null,"docs":" Representation of the Bytes instruction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484285},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":293709,"byte_end":293713,"line_start":413,"line_end":413,"column_start":9,"column_end":13},"name":"goto","qualname":"::prog::InstBytes::goto","value":"usize","parent":{"krate":0,"index":1273},"children":[],"decl_id":null,"docs":" The next location to execute in the program if this instruction\n succeeds.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484286},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":293782,"byte_end":293787,"line_start":415,"line_end":415,"column_start":9,"column_end":14},"name":"start","qualname":"::prog::InstBytes::start","value":"u8","parent":{"krate":0,"index":1273},"children":[],"decl_id":null,"docs":" The start (inclusive) of this byte range.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484287},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":293849,"byte_end":293852,"line_start":417,"line_end":417,"column_start":9,"column_end":12},"name":"end","qualname":"::prog::InstBytes::end","value":"u8","parent":{"krate":0,"index":1273},"children":[],"decl_id":null,"docs":" The end (inclusive) of this byte range.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":293958,"byte_end":293965,"line_start":422,"line_end":422,"column_start":12,"column_end":19},"name":"matches","qualname":"<InstBytes>::matches","value":"fn (&self, byte: u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1278},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":294656,"byte_end":294668,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"RegexOptions","qualname":"::re_builder::RegexOptions","value":"RegexOptions { pats, size_limit, dfa_size_limit, case_insensitive, multi_line, dot_matches_new_line, swap_greed, ignore_whitespace, unicode }","parent":null,"children":[{"krate":0,"index":2147484288},{"krate":0,"index":2147484289},{"krate":0,"index":2147484290},{"krate":0,"index":2147484291},{"krate":0,"index":2147484292},{"krate":0,"index":2147484293},{"krate":0,"index":2147484294},{"krate":0,"index":2147484295},{"krate":0,"index":2147484296}],"decl_id":null,"docs":" The set of user configurable options for compiling zero or more regexes.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":294622,"byte_end":294644,"line_start":13,"line_end":13,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2147484288},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":294679,"byte_end":294683,"line_start":15,"line_end":15,"column_start":9,"column_end":13},"name":"pats","qualname":"::re_builder::RegexOptions::pats","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484289},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":294706,"byte_end":294716,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"size_limit","qualname":"::re_builder::RegexOptions::size_limit","value":"usize","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484290},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":294733,"byte_end":294747,"line_start":17,"line_end":17,"column_start":9,"column_end":23},"name":"dfa_size_limit","qualname":"::re_builder::RegexOptions::dfa_size_limit","value":"usize","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484291},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":294764,"byte_end":294780,"line_start":18,"line_end":18,"column_start":9,"column_end":25},"name":"case_insensitive","qualname":"::re_builder::RegexOptions::case_insensitive","value":"bool","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484292},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":294796,"byte_end":294806,"line_start":19,"line_end":19,"column_start":9,"column_end":19},"name":"multi_line","qualname":"::re_builder::RegexOptions::multi_line","value":"bool","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484293},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":294822,"byte_end":294842,"line_start":20,"line_end":20,"column_start":9,"column_end":29},"name":"dot_matches_new_line","qualname":"::re_builder::RegexOptions::dot_matches_new_line","value":"bool","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484294},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":294858,"byte_end":294868,"line_start":21,"line_end":21,"column_start":9,"column_end":19},"name":"swap_greed","qualname":"::re_builder::RegexOptions::swap_greed","value":"bool","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484295},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":294884,"byte_end":294901,"line_start":22,"line_end":22,"column_start":9,"column_end":26},"name":"ignore_whitespace","qualname":"::re_builder::RegexOptions::ignore_whitespace","value":"bool","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484296},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":294917,"byte_end":294924,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"name":"unicode","qualname":"::re_builder::RegexOptions::unicode","value":"bool","parent":{"krate":0,"index":1278},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1351},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":304946,"byte_end":304951,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"Match","qualname":"::re_bytes::Match","value":"Match {  }","parent":null,"children":[{"krate":0,"index":2147484309},{"krate":0,"index":2147484310},{"krate":0,"index":2147484311}],"decl_id":null,"docs":" Match represents a single match of a regex in a haystack.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":304935,"byte_end":305013,"line_start":30,"line_end":34,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":304935,"byte_end":305013,"line_start":30,"line_end":34,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":305132,"byte_end":305137,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"start","qualname":"<Match<'t>>::start","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":675},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":305276,"byte_end":305279,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"end","qualname":"<Match<'t>>::end","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":305381,"byte_end":305389,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<Match<'t>>::as_bytes","value":"fn (&self) -> &'t [u8]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1362},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":306403,"byte_end":306408,"line_start":78,"line_end":78,"column_start":12,"column_end":17},"name":"Regex","qualname":"::re_bytes::Regex","value":"","parent":null,"children":[],"decl_id":null,"docs":" A compiled regular expression for matching arbitrary bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":307467,"byte_end":307470,"line_start":119,"line_end":119,"column_start":12,"column_end":15},"name":"new","qualname":"<Regex>::new","value":"fn (re: &str) -> Result<Regex, Error>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":308201,"byte_end":308209,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Regex>::is_match","value":"fn (&self, text: &[u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":309071,"byte_end":309075,"line_start":165,"line_end":165,"column_start":12,"column_end":16},"name":"find","qualname":"<Regex>::find","value":"fn <'t, > (&self, text: &'t [u8]) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":309791,"byte_end":309800,"line_start":187,"line_end":187,"column_start":12,"column_end":21},"name":"find_iter","qualname":"<Regex>::find_iter","value":"fn <'r, 't, > (&'r self, text: &'t [u8]) -> Matches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":312807,"byte_end":312815,"line_start":254,"line_end":254,"column_start":12,"column_end":20},"name":"captures","qualname":"<Regex>::captures","value":"fn <'t, > (&self, text: &'t [u8]) -> Option<Captures<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":314245,"byte_end":314258,"line_start":289,"line_end":289,"column_start":12,"column_end":25},"name":"captures_iter","qualname":"<Regex>::captures_iter","value":"fn <'r, 't, > (&'r self, text: &'t [u8]) -> CaptureMatches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":315176,"byte_end":315181,"line_start":316,"line_end":316,"column_start":12,"column_end":17},"name":"split","qualname":"<Regex>::split","value":"fn <'r, 't, > (&'r self, text: &'t [u8]) -> Split<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":316197,"byte_end":316203,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"splitn","qualname":"<Regex>::splitn","value":"fn <'r, 't, > (&'r self, text: &'t [u8], limit: usize) -> SplitN<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":320986,"byte_end":320993,"line_start":462,"line_end":462,"column_start":12,"column_end":19},"name":"replace","qualname":"<Regex>::replace","value":"fn <'t, R> (&self, text: &'t [u8], rep: R) -> Cow<'t, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":321450,"byte_end":321461,"line_start":476,"line_end":476,"column_start":12,"column_end":23},"name":"replace_all","qualname":"<Regex>::replace_all","value":"fn <'t, R> (&self, text: &'t [u8], rep: R) -> Cow<'t, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":321930,"byte_end":321938,"line_start":490,"line_end":490,"column_start":12,"column_end":20},"name":"replacen","qualname":"<Regex>::replacen","value":"fn <'t, R> (&self, text: &'t [u8], limit: usize, mut rep: R) -> Cow<'t, [u8]>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":324413,"byte_end":324427,"line_start":561,"line_end":561,"column_start":12,"column_end":26},"name":"shortest_match","qualname":"<Regex>::shortest_match","value":"fn (&self, text: &[u8]) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":324834,"byte_end":324851,"line_start":572,"line_end":572,"column_start":12,"column_end":29},"name":"shortest_match_at","qualname":"<Regex>::shortest_match_at","value":"fn (&self, text: &[u8], start: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":325314,"byte_end":325325,"line_start":587,"line_end":587,"column_start":12,"column_end":23},"name":"is_match_at","qualname":"<Regex>::is_match_at","value":"fn (&self, text: &[u8], start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":703},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":325741,"byte_end":325748,"line_start":598,"line_end":598,"column_start":12,"column_end":19},"name":"find_at","qualname":"<Regex>::find_at","value":"fn <'t, > (&self, text: &'t [u8], start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":326304,"byte_end":326320,"line_start":614,"line_end":614,"column_start":12,"column_end":28},"name":"read_captures_at","qualname":"<Regex>::read_captures_at","value":"fn <'t, > (&self, locs: &mut Locations, text: &'t [u8], start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":326665,"byte_end":326671,"line_start":628,"line_end":628,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Regex>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":326794,"byte_end":326807,"line_start":633,"line_end":633,"column_start":12,"column_end":25},"name":"capture_names","qualname":"<Regex>::capture_names","value":"fn (&self) -> CaptureNames","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":326943,"byte_end":326955,"line_start":638,"line_end":638,"column_start":12,"column_end":24},"name":"captures_len","qualname":"<Regex>::captures_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":327155,"byte_end":327164,"line_start":645,"line_end":645,"column_start":12,"column_end":21},"name":"locations","qualname":"<Regex>::locations","value":"fn (&self) -> Locations","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":710},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":327629,"byte_end":327636,"line_start":658,"line_end":658,"column_start":12,"column_end":19},"name":"Matches","qualname":"::re_bytes::Matches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all non-overlapping matches for a particular string.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":714},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":328209,"byte_end":328223,"line_start":676,"line_end":676,"column_start":12,"column_end":26},"name":"CaptureMatches","qualname":"::re_bytes::CaptureMatches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator that yields all non-overlapping capture groups matching a\n particular regular expression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":718},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":328804,"byte_end":328809,"line_start":694,"line_end":694,"column_start":12,"column_end":17},"name":"Split","qualname":"::re_bytes::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":2147483840},{"krate":0,"index":2147483841}],"decl_id":null,"docs":" Yields all substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":722},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":329792,"byte_end":329798,"line_start":729,"line_end":729,"column_start":12,"column_end":18},"name":"SplitN","qualname":"::re_bytes::SplitN","value":"SplitN {  }","parent":null,"children":[{"krate":0,"index":2147483846},{"krate":0,"index":2147483847}],"decl_id":null,"docs":" Yields at most `N` substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":726},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":330493,"byte_end":330505,"line_start":757,"line_end":757,"column_start":12,"column_end":24},"name":"CaptureNames","qualname":"::re_bytes::CaptureNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the names of all possible captures.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":731},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":331429,"byte_end":331437,"line_start":783,"line_end":783,"column_start":12,"column_end":20},"name":"Captures","qualname":"::re_bytes::Captures","value":"Captures {  }","parent":null,"children":[{"krate":0,"index":2147483858},{"krate":0,"index":2147483859},{"krate":0,"index":2147483860}],"decl_id":null,"docs":" Captures represents a group of captured byte strings for a single match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":733},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":332362,"byte_end":332365,"line_start":809,"line_end":809,"column_start":12,"column_end":15},"name":"get","qualname":"<Captures<'t>>::get","value":"fn (&self, i: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":734},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":332650,"byte_end":332654,"line_start":815,"line_end":815,"column_start":12,"column_end":16},"name":"name","qualname":"<Captures<'t>>::name","value":"fn (&self, name: &str) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":333086,"byte_end":333090,"line_start":824,"line_end":824,"column_start":12,"column_end":16},"name":"iter","qualname":"<Captures<'t>>::iter","value":"fn <'c, > (&'c self) -> SubCaptureMatches<'c, 't>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":334134,"byte_end":334140,"line_start":847,"line_end":847,"column_start":12,"column_end":18},"name":"expand","qualname":"<Captures<'t>>::expand","value":"fn (&self, replacement: &[u8], dst: &mut Vec<u8>) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":334451,"byte_end":334454,"line_start":856,"line_end":856,"column_start":12,"column_end":15},"name":"len","qualname":"<Captures<'t>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":752},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":337584,"byte_end":337601,"line_start":953,"line_end":953,"column_start":12,"column_end":29},"name":"SubCaptureMatches","qualname":"::re_bytes::SubCaptureMatches","value":"SubCaptureMatches {  }","parent":null,"children":[{"krate":0,"index":2147483883},{"krate":0,"index":2147483884}],"decl_id":null,"docs":" An iterator that yields all capturing matches in the order in which they\n appear in the regex.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":756},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":338234,"byte_end":338242,"line_start":973,"line_end":973,"column_start":11,"column_end":19},"name":"Replacer","qualname":"::re_bytes::Replacer","value":"Replacer","parent":null,"children":[{"krate":0,"index":757},{"krate":0,"index":758}],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a byte\n string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":338528,"byte_end":338542,"line_start":981,"line_end":981,"column_start":8,"column_end":22},"name":"replace_append","qualname":"::re_bytes::Replacer::replace_append","value":"fn (&mut self, caps: &Captures, dst: &mut Vec<u8>) -> ()","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a byte\n string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":758},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":338953,"byte_end":338965,"line_start":990,"line_end":990,"column_start":8,"column_end":20},"name":"no_expansion","qualname":"::re_bytes::Replacer::no_expansion","value":"fn <'r, > (&'r mut self) -> Option<Cow<'r, [u8]>>","parent":{"krate":0,"index":756},"children":[],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a byte\n string.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":764},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":339971,"byte_end":339979,"line_start":1022,"line_end":1022,"column_start":12,"column_end":20},"name":"NoExpand","qualname":"::re_bytes::NoExpand","value":"","parent":null,"children":[],"decl_id":null,"docs":" `NoExpand` indicates literal byte string replacement.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":771},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":354772,"byte_end":354776,"line_start":14,"line_end":14,"column_start":10,"column_end":14},"name":"Slot","qualname":"::re_trait::Slot","value":"Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Slot is a single saved capture location. Note that there are two slots for\n every capture in a regular expression (one slot each for the start and end\n of the capture).\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":772},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":354985,"byte_end":354994,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"Locations","qualname":"::re_trait::Locations","value":"","parent":null,"children":[],"decl_id":null,"docs":" Locations represents the offsets of each capturing group in a regex for\n a single match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":774},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":355323,"byte_end":355326,"line_start":28,"line_end":28,"column_start":12,"column_end":15},"name":"pos","qualname":"<Locations>::pos","value":"fn (&self, i: usize) -> Option<(usize, usize)>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":775},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":355770,"byte_end":355774,"line_start":39,"line_end":39,"column_start":12,"column_end":16},"name":"iter","qualname":"<Locations>::iter","value":"fn (&self) -> SubCapturesPosIter","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":776},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":356069,"byte_end":356072,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"len","qualname":"<Locations>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":777},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":356251,"byte_end":356259,"line_start":54,"line_end":54,"column_start":8,"column_end":16},"name":"as_slots","qualname":"::re_trait::as_slots","value":"fn (locs: &mut Locations) -> &mut [Slot]","parent":null,"children":[],"decl_id":null,"docs":" This is a hack to make Locations -> &mut [Slot] be available internally\n without exposing it in the public API.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":778},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":356548,"byte_end":356566,"line_start":64,"line_end":64,"column_start":12,"column_end":30},"name":"SubCapturesPosIter","qualname":"::re_trait::SubCapturesPosIter","value":"SubCapturesPosIter {  }","parent":null,"children":[{"krate":0,"index":2147483900},{"krate":0,"index":2147483901}],"decl_id":null,"docs":" An iterator over capture group positions for a particular match of a\n regular expression.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":782},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":357769,"byte_end":357786,"line_start":99,"line_end":99,"column_start":11,"column_end":28},"name":"RegularExpression","qualname":"::re_trait::RegularExpression","value":"RegularExpression:  Sized","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791},{"krate":0,"index":792}],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":783},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":357839,"byte_end":357843,"line_start":101,"line_end":101,"column_start":10,"column_end":14},"name":"Text","qualname":"::re_trait::RegularExpression::Text","value":"type Text: ?Sized;","parent":{"krate":0,"index":782},"children":[],"decl_id":null,"docs":" The type of the haystack.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":358018,"byte_end":358027,"line_start":105,"line_end":105,"column_start":8,"column_end":17},"name":"slots_len","qualname":"::re_trait::RegularExpression::slots_len","value":"fn (&self) -> usize","parent":{"krate":0,"index":782},"children":[],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":358123,"byte_end":358132,"line_start":108,"line_end":108,"column_start":8,"column_end":17},"name":"locations","qualname":"::re_trait::RegularExpression::locations","value":"fn (&self) -> Locations","parent":{"krate":0,"index":782},"children":[],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":358478,"byte_end":358494,"line_start":117,"line_end":117,"column_start":8,"column_end":24},"name":"next_after_empty","qualname":"::re_trait::RegularExpression::next_after_empty","value":"fn (&self, text: &Self::Text, i: usize) -> usize","parent":{"krate":0,"index":782},"children":[],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":787},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":358601,"byte_end":358618,"line_start":120,"line_end":120,"column_start":8,"column_end":25},"name":"shortest_match_at","qualname":"::re_trait::RegularExpression::shortest_match_at","value":"fn (&self, text: &Self::Text, start: usize) -> Option<usize>","parent":{"krate":0,"index":782},"children":[],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":358774,"byte_end":358785,"line_start":127,"line_end":127,"column_start":8,"column_end":19},"name":"is_match_at","qualname":"::re_trait::RegularExpression::is_match_at","value":"fn (&self, text: &Self::Text, start: usize) -> bool","parent":{"krate":0,"index":782},"children":[],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":358939,"byte_end":358946,"line_start":134,"line_end":134,"column_start":8,"column_end":15},"name":"find_at","qualname":"::re_trait::RegularExpression::find_at","value":"fn (&self, text: &Self::Text, start: usize) -> Option<(usize, usize)>","parent":{"krate":0,"index":782},"children":[],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":790},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":359181,"byte_end":359197,"line_start":142,"line_end":142,"column_start":8,"column_end":24},"name":"read_captures_at","qualname":"::re_trait::RegularExpression::read_captures_at","value":"fn (&self, locs: &mut Locations, text: &Self::Text, start: usize) -> Option<(usize, usize)>","parent":{"krate":0,"index":782},"children":[],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":359430,"byte_end":359439,"line_start":151,"line_end":151,"column_start":8,"column_end":17},"name":"find_iter","qualname":"::re_trait::RegularExpression::find_iter","value":"fn (self, text: &Self::Text) -> Matches<Self>","parent":{"krate":0,"index":782},"children":[],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":359761,"byte_end":359774,"line_start":165,"line_end":165,"column_start":8,"column_end":21},"name":"captures_iter","qualname":"::re_trait::RegularExpression::captures_iter","value":"fn (self, text: &Self::Text) -> CaptureMatches<Self>","parent":{"krate":0,"index":782},"children":[],"decl_id":null,"docs":" `RegularExpression` describes types that can implement regex searching.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":793},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":359990,"byte_end":359997,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"Matches","qualname":"::re_trait::Matches","value":"Matches {  }","parent":null,"children":[{"krate":0,"index":2147483904},{"krate":0,"index":2147483905},{"krate":0,"index":2147483906},{"krate":0,"index":2147483907}],"decl_id":null,"docs":" An iterator over all non-overlapping successive leftmost-first matches.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":360256,"byte_end":360260,"line_start":183,"line_end":183,"column_start":12,"column_end":16},"name":"text","qualname":"<Matches<'t, R>>::text","value":"fn (&self) -> &'t R::Text","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":796},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":360358,"byte_end":360363,"line_start":188,"line_end":188,"column_start":12,"column_end":17},"name":"regex","qualname":"<Matches<'t, R>>::regex","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":800},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":361563,"byte_end":361577,"line_start":225,"line_end":225,"column_start":12,"column_end":26},"name":"CaptureMatches","qualname":"::re_trait::CaptureMatches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all non-overlapping successive leftmost-first matches with\n captures.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":361774,"byte_end":361778,"line_start":230,"line_end":230,"column_start":12,"column_end":16},"name":"text","qualname":"<CaptureMatches<'t, R>>::text","value":"fn (&self) -> &'t R::Text","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":361880,"byte_end":361885,"line_start":235,"line_end":235,"column_start":12,"column_end":17},"name":"regex","qualname":"<CaptureMatches<'t, R>>::regex","value":"fn (&self) -> &R","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":827},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":363777,"byte_end":363783,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"escape","qualname":"::re_unicode::escape","value":"fn (text: &str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Escapes all regular expression meta characters in `text`.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1479},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":364034,"byte_end":364039,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"Match","qualname":"::re_unicode::Match","value":"Match {  }","parent":null,"children":[{"krate":0,"index":2147484350},{"krate":0,"index":2147484351},{"krate":0,"index":2147484352}],"decl_id":null,"docs":" Match represents a single match of a regex in a haystack.","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":364023,"byte_end":364100,"line_start":39,"line_end":43,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":364023,"byte_end":364100,"line_start":39,"line_end":43,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":829},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":364219,"byte_end":364224,"line_start":48,"line_end":48,"column_start":12,"column_end":17},"name":"start","qualname":"<Match<'t>>::start","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":830},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":364363,"byte_end":364366,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"end","qualname":"<Match<'t>>::end","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":364468,"byte_end":364474,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Match<'t>>::as_str","value":"fn (&self) -> &'t str","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1490},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":367179,"byte_end":367184,"line_start":137,"line_end":137,"column_start":12,"column_end":17},"name":"Regex","qualname":"::re_unicode::Regex","value":"","parent":null,"children":[],"decl_id":null,"docs":" A compiled regular expression for matching Unicode strings.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":845},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":368126,"byte_end":368129,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"new","qualname":"<Regex>::new","value":"fn (re: &str) -> Result<Regex, Error>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":846},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":368859,"byte_end":368867,"line_start":197,"line_end":197,"column_start":12,"column_end":20},"name":"is_match","qualname":"<Regex>::is_match","value":"fn (&self, text: &str) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":847},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":369743,"byte_end":369747,"line_start":222,"line_end":222,"column_start":12,"column_end":16},"name":"find","qualname":"<Regex>::find","value":"fn <'t, > (&self, text: &'t str) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":848},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":370461,"byte_end":370470,"line_start":244,"line_end":244,"column_start":12,"column_end":21},"name":"find_iter","qualname":"<Regex>::find_iter","value":"fn <'r, 't, > (&'r self, text: &'t str) -> Matches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":849},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":373506,"byte_end":373514,"line_start":311,"line_end":311,"column_start":12,"column_end":20},"name":"captures","qualname":"<Regex>::captures","value":"fn <'t, > (&self, text: &'t str) -> Option<Captures<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":850},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":374832,"byte_end":374845,"line_start":345,"line_end":345,"column_start":12,"column_end":25},"name":"captures_iter","qualname":"<Regex>::captures_iter","value":"fn <'r, 't, > (&'r self, text: &'t str) -> CaptureMatches<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":851},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":375704,"byte_end":375709,"line_start":370,"line_end":370,"column_start":12,"column_end":17},"name":"split","qualname":"<Regex>::split","value":"fn <'r, 't, > (&'r self, text: &'t str) -> Split<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":852},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":376697,"byte_end":376703,"line_start":397,"line_end":397,"column_start":12,"column_end":18},"name":"splitn","qualname":"<Regex>::splitn","value":"fn <'r, 't, > (&'r self, text: &'t str, limit: usize) -> SplitN<'r, 't>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":853},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":381240,"byte_end":381247,"line_start":509,"line_end":509,"column_start":12,"column_end":19},"name":"replace","qualname":"<Regex>::replace","value":"fn <'t, R> (&self, text: &'t str, rep: R) -> Cow<'t, str>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":854},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":381704,"byte_end":381715,"line_start":523,"line_end":523,"column_start":12,"column_end":23},"name":"replace_all","qualname":"<Regex>::replace_all","value":"fn <'t, R> (&self, text: &'t str, rep: R) -> Cow<'t, str>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":855},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":382184,"byte_end":382192,"line_start":537,"line_end":537,"column_start":12,"column_end":20},"name":"replacen","qualname":"<Regex>::replacen","value":"fn <'t, R> (&self, text: &'t str, limit: usize, mut rep: R) -> Cow<'t, str>","parent":null,"children":[],"decl_id":null,"docs":" Core regular expression methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":857},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":385148,"byte_end":385162,"line_start":617,"line_end":617,"column_start":12,"column_end":26},"name":"shortest_match","qualname":"<Regex>::shortest_match","value":"fn (&self, text: &str) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":858},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":385568,"byte_end":385585,"line_start":628,"line_end":628,"column_start":12,"column_end":29},"name":"shortest_match_at","qualname":"<Regex>::shortest_match_at","value":"fn (&self, text: &str, start: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":859},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":386051,"byte_end":386062,"line_start":643,"line_end":643,"column_start":12,"column_end":23},"name":"is_match_at","qualname":"<Regex>::is_match_at","value":"fn (&self, text: &str, start: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":860},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":386477,"byte_end":386484,"line_start":654,"line_end":654,"column_start":12,"column_end":19},"name":"find_at","qualname":"<Regex>::find_at","value":"fn <'t, > (&self, text: &'t str, start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":861},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":387054,"byte_end":387070,"line_start":671,"line_end":671,"column_start":12,"column_end":28},"name":"read_captures_at","qualname":"<Regex>::read_captures_at","value":"fn <'t, > (&self, locs: &mut Locations, text: &'t str, start: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":" Advanced or \"lower level\" search methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":863},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":387444,"byte_end":387450,"line_start":687,"line_end":687,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Regex>::as_str","value":"fn (&self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":864},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":387573,"byte_end":387586,"line_start":692,"line_end":692,"column_start":12,"column_end":25},"name":"capture_names","qualname":"<Regex>::capture_names","value":"fn (&self) -> CaptureNames","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":865},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":387722,"byte_end":387734,"line_start":697,"line_end":697,"column_start":12,"column_end":24},"name":"captures_len","qualname":"<Regex>::captures_len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":866},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":387934,"byte_end":387943,"line_start":704,"line_end":704,"column_start":12,"column_end":21},"name":"locations","qualname":"<Regex>::locations","value":"fn (&self) -> Locations","parent":null,"children":[],"decl_id":null,"docs":" Auxiliary methods.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":867},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":388274,"byte_end":388286,"line_start":715,"line_end":715,"column_start":12,"column_end":24},"name":"CaptureNames","qualname":"::re_unicode::CaptureNames","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over the names of all possible captures.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":872},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":388875,"byte_end":388880,"line_start":736,"line_end":736,"column_start":12,"column_end":17},"name":"Split","qualname":"::re_unicode::Split","value":"Split {  }","parent":null,"children":[{"krate":0,"index":2147483951},{"krate":0,"index":2147483952}],"decl_id":null,"docs":" Yields all substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":876},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":389856,"byte_end":389862,"line_start":771,"line_end":771,"column_start":12,"column_end":18},"name":"SplitN","qualname":"::re_unicode::SplitN","value":"SplitN {  }","parent":null,"children":[{"krate":0,"index":2147483957},{"krate":0,"index":2147483958}],"decl_id":null,"docs":" Yields at most `N` substrings delimited by a regular expression match.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":880},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":390847,"byte_end":390855,"line_start":804,"line_end":804,"column_start":12,"column_end":20},"name":"Captures","qualname":"::re_unicode::Captures","value":"Captures {  }","parent":null,"children":[{"krate":0,"index":2147483963},{"krate":0,"index":2147483964},{"krate":0,"index":2147483965}],"decl_id":null,"docs":" Captures represents a group of captured strings for a single match.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":391743,"byte_end":391746,"line_start":830,"line_end":830,"column_start":12,"column_end":15},"name":"get","qualname":"<Captures<'t>>::get","value":"fn (&self, i: usize) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":883},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":392031,"byte_end":392035,"line_start":836,"line_end":836,"column_start":12,"column_end":16},"name":"name","qualname":"<Captures<'t>>::name","value":"fn (&self, name: &str) -> Option<Match<'t>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":392467,"byte_end":392471,"line_start":845,"line_end":845,"column_start":12,"column_end":16},"name":"iter","qualname":"<Captures<'t>>::iter","value":"fn <'c, > (&'c self) -> SubCaptureMatches<'c, 't>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":393515,"byte_end":393521,"line_start":868,"line_end":868,"column_start":12,"column_end":18},"name":"expand","qualname":"<Captures<'t>>::expand","value":"fn (&self, replacement: &str, dst: &mut String) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":393828,"byte_end":393831,"line_start":877,"line_end":877,"column_start":12,"column_end":15},"name":"len","qualname":"<Captures<'t>>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":898},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":396509,"byte_end":396526,"line_start":959,"line_end":959,"column_start":12,"column_end":29},"name":"SubCaptureMatches","qualname":"::re_unicode::SubCaptureMatches","value":"SubCaptureMatches {  }","parent":null,"children":[{"krate":0,"index":2147483988},{"krate":0,"index":2147483989}],"decl_id":null,"docs":" An iterator that yields all capturing matches in the order in which they\n appear in the regex.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":902},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":397153,"byte_end":397167,"line_start":980,"line_end":980,"column_start":12,"column_end":26},"name":"CaptureMatches","qualname":"::re_unicode::CaptureMatches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator that yields all non-overlapping capture groups matching a\n particular regular expression.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":906},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":397852,"byte_end":397859,"line_start":1001,"line_end":1001,"column_start":12,"column_end":19},"name":"Matches","qualname":"::re_unicode::Matches","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all non-overlapping matches for a particular string.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":910},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":398425,"byte_end":398433,"line_start":1017,"line_end":1017,"column_start":11,"column_end":19},"name":"Replacer","qualname":"::re_unicode::Replacer","value":"Replacer","parent":null,"children":[{"krate":0,"index":911},{"krate":0,"index":912}],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":911},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":398740,"byte_end":398754,"line_start":1025,"line_end":1025,"column_start":8,"column_end":22},"name":"replace_append","qualname":"::re_unicode::Replacer::replace_append","value":"fn (&mut self, caps: &Captures, dst: &mut String) -> ()","parent":{"krate":0,"index":910},"children":[],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a string.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":399159,"byte_end":399171,"line_start":1034,"line_end":1034,"column_start":8,"column_end":20},"name":"no_expansion","qualname":"::re_unicode::Replacer::no_expansion","value":"fn <'r, > (&'r mut self) -> Option<Cow<'r, str>>","parent":{"krate":0,"index":910},"children":[],"decl_id":null,"docs":" Replacer describes types that can be used to replace matches in a string.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":918},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":400162,"byte_end":400170,"line_start":1066,"line_end":1066,"column_start":12,"column_end":20},"name":"NoExpand","qualname":"::re_unicode::NoExpand","value":"","parent":null,"children":[],"decl_id":null,"docs":" `NoExpand` indicates literal string replacement.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":923},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"teddy128","qualname":"::simd_accel::teddy128","value":"Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/simd_fallback/teddy128.rs","parent":null,"children":[{"krate":0,"index":924},{"krate":0,"index":925},{"krate":0,"index":1493},{"krate":0,"index":1496},{"krate":0,"index":1494},{"krate":0,"index":1498},{"krate":0,"index":1501},{"krate":0,"index":1499},{"krate":0,"index":926}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":925},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":400468,"byte_end":400490,"line_start":3,"line_end":3,"column_start":8,"column_end":30},"name":"is_teddy_128_available","qualname":"::simd_accel::teddy128::is_teddy_128_available","value":"fn () -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1493},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":400551,"byte_end":400556,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Teddy","qualname":"::simd_accel::teddy128::Teddy","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1498},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":400598,"byte_end":400603,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Match","qualname":"::simd_accel::teddy128::Match","value":"Match { pat, start, end }","parent":null,"children":[{"krate":0,"index":2147484363},{"krate":0,"index":2147484364},{"krate":0,"index":2147484365}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484363},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":400614,"byte_end":400617,"line_start":12,"line_end":12,"column_start":9,"column_end":12},"name":"pat","qualname":"::simd_accel::teddy128::Match::pat","value":"usize","parent":{"krate":0,"index":1498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484364},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":400634,"byte_end":400639,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"start","qualname":"::simd_accel::teddy128::Match::start","value":"usize","parent":{"krate":0,"index":1498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147484365},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":400656,"byte_end":400659,"line_start":14,"line_end":14,"column_start":9,"column_end":12},"name":"end","qualname":"::simd_accel::teddy128::Match::end","value":"usize","parent":{"krate":0,"index":1498},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":927},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":400695,"byte_end":400698,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<Teddy>::new","value":"fn (_pats: &syntax::Literals) -> Option<Teddy>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":400762,"byte_end":400770,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"patterns","qualname":"<Teddy>::patterns","value":"fn (&self) -> &[Vec<u8>]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":929},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":400811,"byte_end":400814,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"len","qualname":"<Teddy>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":400848,"byte_end":400864,"line_start":21,"line_end":21,"column_start":12,"column_end":28},"name":"approximate_size","qualname":"<Teddy>::approximate_size","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":400898,"byte_end":400902,"line_start":22,"line_end":22,"column_start":12,"column_end":16},"name":"find","qualname":"<Teddy>::find","value":"fn (&self, _haystack: &[u8]) -> Option<Match>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1503},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":401577,"byte_end":401586,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"SparseSet","qualname":"::sparse::SparseSet","value":"SparseSet {  }","parent":null,"children":[{"krate":0,"index":2147484366},{"krate":0,"index":2147484367},{"krate":0,"index":2147484368}],"decl_id":null,"docs":" A sparse set used for representing ordered NFA states.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":402060,"byte_end":402063,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<SparseSet>::new","value":"fn (size: usize) -> SparseSet","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":402230,"byte_end":402233,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"len","qualname":"<SparseSet>::len","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":402288,"byte_end":402296,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SparseSet>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":402355,"byte_end":402363,"line_start":45,"line_end":45,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SparseSet>::capacity","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":402425,"byte_end":402431,"line_start":49,"line_end":49,"column_start":12,"column_end":18},"name":"insert","qualname":"<SparseSet>::insert","value":"fn (&mut self, value: usize) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":402591,"byte_end":402599,"line_start":56,"line_end":56,"column_start":12,"column_end":20},"name":"contains","qualname":"<SparseSet>::contains","value":"fn (&self, value: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":402733,"byte_end":402738,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"clear","qualname":"<SparseSet>::clear","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":950},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22408,"byte_end":22416,"line_start":658,"line_end":658,"column_start":9,"column_end":17},"name":"internal","qualname":"::internal","value":"Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-0.2.5/src/lib.rs","parent":null,"children":[{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":959},{"krate":0,"index":960},{"krate":0,"index":965}],"decl_id":null,"docs":" The `internal` module exists to support suspicious activity, such as\n testing different matching engines and supporting the `regex-debug` CLI\n utility.\n","sig":null,"attributes":[]}],"impls":[],"refs":[{"kind":"Mod","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,109,111,100,46,114,115],"byte_start":400437,"byte_end":400445,"line_start":1,"line_end":1,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":923}}],"macro_refs":[],"relations":[{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":25376,"byte_end":25381,"line_start":70,"line_end":70,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,98,97,99,107,116,114,97,99,107,46,114,115],"byte_start":26043,"byte_end":26050,"line_start":89,"line_end":89,"column_start":32,"column_end":39},"kind":"Impl","from":{"krate":0,"index":966},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":44919,"byte_end":44927,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":"Impl","from":{"krate":0,"index":97},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":71543,"byte_end":71552,"line_start":784,"line_end":784,"column_start":6,"column_end":15},"kind":"Impl","from":{"krate":0,"index":986},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":73729,"byte_end":73737,"line_start":847,"line_end":847,"column_start":6,"column_end":14},"kind":"Impl","from":{"krate":0,"index":991},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":74658,"byte_end":74670,"line_start":880,"line_end":880,"column_start":14,"column_end":26},"kind":"Impl","from":{"krate":0,"index":145},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":79546,"byte_end":79557,"line_start":1012,"line_end":1012,"column_start":6,"column_end":17},"kind":"Impl","from":{"krate":0,"index":150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,99,111,109,112,105,108,101,46,114,115],"byte_start":80756,"byte_end":80768,"line_start":1053,"line_end":1053,"column_start":6,"column_end":18},"kind":"Impl","from":{"krate":0,"index":157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":93728,"byte_end":93734,"line_start":224,"line_end":224,"column_start":9,"column_end":15},"kind":"Impl","from":{"krate":0,"index":1042},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":96029,"byte_end":96037,"line_start":295,"line_end":295,"column_start":23,"column_end":31},"kind":"Impl","from":{"krate":0,"index":182},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":96459,"byte_end":96464,"line_start":312,"line_end":312,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1047},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":100695,"byte_end":100700,"line_start":423,"line_end":423,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1026},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":101489,"byte_end":101499,"line_start":447,"line_end":447,"column_start":6,"column_end":16},"kind":"Impl","from":{"krate":0,"index":1031},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":101803,"byte_end":101806,"line_start":457,"line_end":457,"column_start":10,"column_end":13},"kind":"Impl","from":{"krate":0,"index":1039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":148848,"byte_end":148859,"line_start":1591,"line_end":1591,"column_start":6,"column_end":17},"kind":"Impl","from":{"krate":0,"index":1036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":150720,"byte_end":150730,"line_start":1648,"line_end":1648,"column_start":6,"column_end":16},"kind":"Impl","from":{"krate":0,"index":1078},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":151166,"byte_end":151170,"line_start":1674,"line_end":1674,"column_start":6,"column_end":10},"kind":"Impl","from":{"krate":0,"index":1057},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":151746,"byte_end":151751,"line_start":1699,"line_end":1699,"column_start":21,"column_end":26},"kind":"Impl","from":{"krate":0,"index":1047},"to":{"krate":2,"index":3471}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":152022,"byte_end":152033,"line_start":1709,"line_end":1709,"column_start":21,"column_end":32},"kind":"Impl","from":{"krate":0,"index":1036},"to":{"krate":2,"index":3471}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":152455,"byte_end":152469,"line_start":1723,"line_end":1723,"column_start":25,"column_end":39},"kind":"Impl","from":{"krate":0,"index":258},"to":{"krate":2,"index":3471}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,100,102,97,46,114,115],"byte_start":152975,"byte_end":152985,"line_start":1741,"line_end":1741,"column_start":21,"column_end":31},"kind":"Impl","from":{"krate":0,"index":1078},"to":{"krate":2,"index":3471}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":158081,"byte_end":158086,"line_start":32,"line_end":32,"column_start":30,"column_end":35},"kind":"Impl","from":{"krate":0,"index":1091},"to":{"krate":1,"index":1199}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":158427,"byte_end":158432,"line_start":46,"line_end":46,"column_start":23,"column_end":28},"kind":"Impl","from":{"krate":0,"index":1091},"to":{"krate":2,"index":3473}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,114,114,111,114,46,114,115],"byte_start":158834,"byte_end":158839,"line_start":59,"line_end":59,"column_start":30,"column_end":35},"kind":"Impl","from":{"krate":0,"index":1091},"to":{"krate":2,"index":1232}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":162809,"byte_end":162820,"line_start":111,"line_end":111,"column_start":6,"column_end":17},"kind":"Impl","from":{"krate":0,"index":313},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":171190,"byte_end":171203,"line_start":330,"line_end":330,"column_start":32,"column_end":45},"kind":"Impl","from":{"krate":0,"index":312},"to":{"krate":0,"index":782}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":172241,"byte_end":172251,"line_start":365,"line_end":365,"column_start":32,"column_end":42},"kind":"Impl","from":{"krate":0,"index":1099},"to":{"krate":0,"index":782}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":181438,"byte_end":181448,"line_start":598,"line_end":598,"column_start":10,"column_end":20},"kind":"Impl","from":{"krate":0,"index":1099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":196059,"byte_end":196072,"line_start":1057,"line_end":1057,"column_start":10,"column_end":23},"kind":"Impl","from":{"krate":0,"index":312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":196196,"byte_end":196200,"line_start":1063,"line_end":1063,"column_start":6,"column_end":10},"kind":"Impl","from":{"krate":0,"index":311},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":198029,"byte_end":198033,"line_start":1120,"line_end":1120,"column_start":16,"column_end":20},"kind":"Impl","from":{"krate":0,"index":311},"to":{"krate":2,"index":1213}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":198183,"byte_end":198195,"line_start":1129,"line_end":1129,"column_start":6,"column_end":18},"kind":"Impl","from":{"krate":0,"index":1102},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,101,99,46,114,115],"byte_start":203545,"byte_end":203562,"line_start":1270,"line_end":1270,"column_start":6,"column_end":23},"kind":"Impl","from":{"krate":0,"index":1123},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,112,97,110,100,46,114,115],"byte_start":207005,"byte_end":207008,"line_start":112,"line_end":112,"column_start":28,"column_end":31},"kind":"Impl","from":{"krate":0,"index":1139},"to":{"krate":2,"index":1232}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,101,120,112,97,110,100,46,114,115],"byte_start":207104,"byte_end":207107,"line_start":118,"line_end":118,"column_start":22,"column_end":25},"kind":"Impl","from":{"krate":0,"index":1139},"to":{"krate":2,"index":1232}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":215732,"byte_end":215739,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"kind":"Impl","from":{"krate":0,"index":1150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":218803,"byte_end":218812,"line_start":142,"line_end":142,"column_start":10,"column_end":19},"kind":"Impl","from":{"krate":0,"index":1156},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":218986,"byte_end":218995,"line_start":149,"line_end":149,"column_start":25,"column_end":34},"kind":"Impl","from":{"krate":0,"index":1156},"to":{"krate":2,"index":951}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":219101,"byte_end":219110,"line_start":157,"line_end":157,"column_start":20,"column_end":29},"kind":"Impl","from":{"krate":0,"index":1156},"to":{"krate":0,"index":429}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":221229,"byte_end":221238,"line_start":232,"line_end":232,"column_start":10,"column_end":19},"kind":"Impl","from":{"krate":0,"index":1162},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":221500,"byte_end":221509,"line_start":242,"line_end":242,"column_start":25,"column_end":34},"kind":"Impl","from":{"krate":0,"index":1162},"to":{"krate":2,"index":951}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":221618,"byte_end":221627,"line_start":250,"line_end":250,"column_start":20,"column_end":29},"kind":"Impl","from":{"krate":0,"index":1162},"to":{"krate":0,"index":429}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":224873,"byte_end":224877,"line_start":348,"line_end":348,"column_start":21,"column_end":25},"kind":"Impl","from":{"krate":0,"index":1168},"to":{"krate":2,"index":3471}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":225087,"byte_end":225091,"line_start":357,"line_end":357,"column_start":6,"column_end":10},"kind":"Impl","from":{"krate":0,"index":1168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":226041,"byte_end":226045,"line_start":388,"line_end":388,"column_start":21,"column_end":25},"kind":"Impl","from":{"krate":0,"index":1168},"to":{"krate":2,"index":1232}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":226127,"byte_end":226131,"line_start":392,"line_end":392,"column_start":29,"column_end":33},"kind":"Impl","from":{"krate":0,"index":1168},"to":{"krate":2,"index":1232}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":226254,"byte_end":226258,"line_start":398,"line_end":398,"column_start":26,"column_end":30},"kind":"Impl","from":{"krate":0,"index":1168},"to":{"krate":2,"index":1119}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,105,110,112,117,116,46,114,115],"byte_start":226487,"byte_end":226491,"line_start":408,"line_end":408,"column_start":27,"column_end":31},"kind":"Impl","from":{"krate":0,"index":1168},"to":{"krate":2,"index":1146}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":228454,"byte_end":228469,"line_start":52,"line_end":52,"column_start":6,"column_end":21},"kind":"Impl","from":{"krate":0,"index":1187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":233281,"byte_end":233288,"line_start":186,"line_end":186,"column_start":6,"column_end":13},"kind":"Impl","from":{"krate":0,"index":1192},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":235903,"byte_end":235914,"line_start":253,"line_end":253,"column_start":23,"column_end":34},"kind":"Impl","from":{"krate":0,"index":532},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":237339,"byte_end":237352,"line_start":307,"line_end":307,"column_start":6,"column_end":19},"kind":"Impl","from":{"krate":0,"index":1197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":241275,"byte_end":241286,"line_start":416,"line_end":416,"column_start":6,"column_end":17},"kind":"Impl","from":{"krate":0,"index":1202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,108,105,116,101,114,97,108,115,46,114,115],"byte_start":246593,"byte_end":246609,"line_start":579,"line_end":579,"column_start":6,"column_end":22},"kind":"Impl","from":{"krate":0,"index":1207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,97,116,116,101,114,110,46,114,115],"byte_start":264329,"byte_end":264342,"line_start":25,"line_end":25,"column_start":38,"column_end":51},"kind":"Impl","from":{"krate":0,"index":578},"to":{"krate":2,"index":2805}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,105,107,101,118,109,46,114,115],"byte_start":268643,"byte_end":268648,"line_start":85,"line_end":85,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1215},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,105,107,101,118,109,46,114,115],"byte_start":268942,"byte_end":268945,"line_start":97,"line_end":97,"column_start":20,"column_end":23},"kind":"Impl","from":{"krate":0,"index":1212},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,105,107,101,118,109,46,114,115],"byte_start":278069,"byte_end":278076,"line_start":355,"line_end":355,"column_start":6,"column_end":13},"kind":"Impl","from":{"krate":0,"index":1220},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":281893,"byte_end":281900,"line_start":77,"line_end":77,"column_start":6,"column_end":13},"kind":"Impl","from":{"krate":0,"index":1230},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":284854,"byte_end":284861,"line_start":161,"line_end":161,"column_start":16,"column_end":23},"kind":"Impl","from":{"krate":0,"index":1230},"to":{"krate":2,"index":951}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":284980,"byte_end":284987,"line_start":169,"line_end":169,"column_start":21,"column_end":28},"kind":"Impl","from":{"krate":0,"index":1230},"to":{"krate":2,"index":3471}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":290049,"byte_end":290053,"line_start":291,"line_end":291,"column_start":6,"column_end":10},"kind":"Impl","from":{"krate":0,"index":1233},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":292444,"byte_end":292454,"line_start":373,"line_end":373,"column_start":6,"column_end":16},"kind":"Impl","from":{"krate":0,"index":1268},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,112,114,111,103,46,114,115],"byte_start":293866,"byte_end":293875,"line_start":420,"line_end":420,"column_start":6,"column_end":15},"kind":"Impl","from":{"krate":0,"index":1273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,117,105,108,100,101,114,46,114,115],"byte_start":294952,"byte_end":294964,"line_start":26,"line_end":26,"column_start":18,"column_end":30},"kind":"Impl","from":{"krate":0,"index":1278},"to":{"krate":2,"index":1219}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":305024,"byte_end":305029,"line_start":36,"line_end":36,"column_start":10,"column_end":15},"kind":"Impl","from":{"krate":0,"index":1351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":306439,"byte_end":306444,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"kind":"Impl","from":{"krate":0,"index":1362},"to":{"krate":2,"index":3473}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":306621,"byte_end":306626,"line_start":87,"line_end":87,"column_start":21,"column_end":26},"kind":"Impl","from":{"krate":0,"index":1362},"to":{"krate":2,"index":3471}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":306931,"byte_end":306936,"line_start":98,"line_end":98,"column_start":21,"column_end":26},"kind":"Impl","from":{"krate":0,"index":1362},"to":{"krate":2,"index":1232}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":307020,"byte_end":307025,"line_start":104,"line_end":104,"column_start":18,"column_end":23},"kind":"Impl","from":{"krate":0,"index":1362},"to":{"krate":2,"index":2898}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":307236,"byte_end":307241,"line_start":114,"line_end":114,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":323612,"byte_end":323617,"line_start":539,"line_end":539,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":326595,"byte_end":326600,"line_start":626,"line_end":626,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1362},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":327712,"byte_end":327719,"line_start":660,"line_end":660,"column_start":27,"column_end":34},"kind":"Impl","from":{"krate":0,"index":710},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":328306,"byte_end":328320,"line_start":678,"line_end":678,"column_start":27,"column_end":41},"kind":"Impl","from":{"krate":0,"index":714},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":328895,"byte_end":328900,"line_start":699,"line_end":699,"column_start":27,"column_end":32},"kind":"Impl","from":{"krate":0,"index":718},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":329879,"byte_end":329885,"line_start":734,"line_end":734,"column_start":27,"column_end":33},"kind":"Impl","from":{"krate":0,"index":722},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":330574,"byte_end":330586,"line_start":759,"line_end":759,"column_start":23,"column_end":35},"kind":"Impl","from":{"krate":0,"index":726},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":331544,"byte_end":331552,"line_start":789,"line_end":789,"column_start":10,"column_end":18},"kind":"Impl","from":{"krate":0,"index":731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":334530,"byte_end":334538,"line_start":861,"line_end":861,"column_start":25,"column_end":33},"kind":"Impl","from":{"krate":0,"index":731},"to":{"krate":2,"index":3471}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":334765,"byte_end":334778,"line_start":869,"line_end":869,"column_start":29,"column_end":42},"kind":"Impl","from":{"krate":0,"index":740},"to":{"krate":2,"index":3471}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":336269,"byte_end":336277,"line_start":914,"line_end":914,"column_start":27,"column_end":35},"kind":"Impl","from":{"krate":0,"index":731},"to":{"krate":2,"index":998}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":336913,"byte_end":336921,"line_start":935,"line_end":935,"column_start":33,"column_end":41},"kind":"Impl","from":{"krate":0,"index":731},"to":{"krate":2,"index":998}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":337705,"byte_end":337722,"line_start":958,"line_end":958,"column_start":27,"column_end":44},"kind":"Impl","from":{"krate":0,"index":752},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":339384,"byte_end":339385,"line_start":1008,"line_end":1008,"column_start":22,"column_end":23},"kind":"Impl","from":{"krate":0,"index":2147483893},"to":{"krate":0,"index":756}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,98,121,116,101,115,46,114,115],"byte_start":340022,"byte_end":340030,"line_start":1024,"line_end":1024,"column_start":23,"column_end":31},"kind":"Impl","from":{"krate":0,"index":764},"to":{"krate":0,"index":756}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":355013,"byte_end":355022,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"kind":"Impl","from":{"krate":0,"index":772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":356639,"byte_end":356657,"line_start":69,"line_end":69,"column_start":23,"column_end":41},"kind":"Impl","from":{"krate":0,"index":778},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":357788,"byte_end":357793,"line_start":99,"line_end":99,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":841},"to":{"krate":0,"index":782}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":360148,"byte_end":360155,"line_start":181,"line_end":181,"column_start":13,"column_end":20},"kind":"Impl","from":{"krate":0,"index":793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":360430,"byte_end":360437,"line_start":193,"line_end":193,"column_start":26,"column_end":33},"kind":"Impl","from":{"krate":0,"index":793},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":361659,"byte_end":361673,"line_start":228,"line_end":228,"column_start":13,"column_end":27},"kind":"Impl","from":{"krate":0,"index":800},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,116,114,97,105,116,46,114,115],"byte_start":361958,"byte_end":361972,"line_start":240,"line_end":240,"column_start":26,"column_end":40},"kind":"Impl","from":{"krate":0,"index":800},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":364111,"byte_end":364116,"line_start":45,"line_end":45,"column_start":10,"column_end":15},"kind":"Impl","from":{"krate":0,"index":1479},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":367215,"byte_end":367220,"line_start":139,"line_end":139,"column_start":23,"column_end":28},"kind":"Impl","from":{"krate":0,"index":1490},"to":{"krate":2,"index":3473}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":367397,"byte_end":367402,"line_start":146,"line_end":146,"column_start":21,"column_end":26},"kind":"Impl","from":{"krate":0,"index":1490},"to":{"krate":2,"index":3471}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":367590,"byte_end":367595,"line_start":154,"line_end":154,"column_start":21,"column_end":26},"kind":"Impl","from":{"krate":0,"index":1490},"to":{"krate":2,"index":1232}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":367679,"byte_end":367684,"line_start":160,"line_end":160,"column_start":18,"column_end":23},"kind":"Impl","from":{"krate":0,"index":1490},"to":{"krate":2,"index":2898}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":367895,"byte_end":367900,"line_start":170,"line_end":170,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":384355,"byte_end":384360,"line_start":595,"line_end":595,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":387374,"byte_end":387379,"line_start":685,"line_end":685,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":388355,"byte_end":388367,"line_start":717,"line_end":717,"column_start":23,"column_end":35},"kind":"Impl","from":{"krate":0,"index":867},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":388966,"byte_end":388971,"line_start":741,"line_end":741,"column_start":27,"column_end":32},"kind":"Impl","from":{"krate":0,"index":872},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":389943,"byte_end":389949,"line_start":776,"line_end":776,"column_start":27,"column_end":33},"kind":"Impl","from":{"krate":0,"index":876},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":390961,"byte_end":390969,"line_start":810,"line_end":810,"column_start":10,"column_end":18},"kind":"Impl","from":{"krate":0,"index":880},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":393907,"byte_end":393915,"line_start":882,"line_end":882,"column_start":25,"column_end":33},"kind":"Impl","from":{"krate":0,"index":880},"to":{"krate":2,"index":3471}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":394142,"byte_end":394155,"line_start":890,"line_end":890,"column_start":29,"column_end":42},"kind":"Impl","from":{"krate":0,"index":889},"to":{"krate":2,"index":3471}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":395202,"byte_end":395210,"line_start":920,"line_end":920,"column_start":27,"column_end":35},"kind":"Impl","from":{"krate":0,"index":880},"to":{"krate":2,"index":998}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":395842,"byte_end":395850,"line_start":941,"line_end":941,"column_start":33,"column_end":41},"kind":"Impl","from":{"krate":0,"index":880},"to":{"krate":2,"index":998}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":396630,"byte_end":396647,"line_start":964,"line_end":964,"column_start":27,"column_end":44},"kind":"Impl","from":{"krate":0,"index":898},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":397253,"byte_end":397267,"line_start":982,"line_end":982,"column_start":27,"column_end":41},"kind":"Impl","from":{"krate":0,"index":902},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":397938,"byte_end":397945,"line_start":1003,"line_end":1003,"column_start":27,"column_end":34},"kind":"Impl","from":{"krate":0,"index":906},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":399596,"byte_end":399597,"line_start":1052,"line_end":1052,"column_start":22,"column_end":23},"kind":"Impl","from":{"krate":0,"index":2147484012},"to":{"krate":0,"index":910}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,114,101,95,117,110,105,99,111,100,101,46,114,115],"byte_start":400212,"byte_end":400220,"line_start":1068,"line_end":1068,"column_start":23,"column_end":31},"kind":"Impl","from":{"krate":0,"index":918},"to":{"krate":0,"index":910}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,105,109,100,95,102,97,108,108,98,97,99,107,47,116,101,100,100,121,49,50,56,46,114,115],"byte_start":400676,"byte_end":400681,"line_start":17,"line_end":17,"column_start":6,"column_end":11},"kind":"Impl","from":{"krate":0,"index":1493},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":402037,"byte_end":402046,"line_start":28,"line_end":28,"column_start":6,"column_end":15},"kind":"Impl","from":{"krate":0,"index":1503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,101,103,101,120,45,48,46,50,46,53,47,115,114,99,47,115,112,97,114,115,101,46,114,115],"byte_start":402799,"byte_end":402808,"line_start":66,"line_end":66,"column_start":16,"column_end":25},"kind":"Impl","from":{"krate":0,"index":1503},"to":{"krate":2,"index":951}}]}