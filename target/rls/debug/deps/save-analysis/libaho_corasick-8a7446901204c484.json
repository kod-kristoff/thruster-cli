{"config":{"output_file":null,"full_docs":false,"pub_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"prelude":{"crate_id":{"name":"aho_corasick","disambiguator":[15219239259020591903,9792483394675489254]},"crate_root":"Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src","external_crates":[{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":11,"id":{"name":"memchr","disambiguator":[15791592761105330143,16170639496984725811]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":8,"id":{"name":"compiler_builtins","disambiguator":[12258243971646201430,5541661192865071085]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":5,"id":{"name":"alloc_system","disambiguator":[7479594750673413303,11700248684352491790]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1278364905140336275,5704441828477959823]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[17326616259069988615,5881405958817750738]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7558149434501259724,6021108799824110139]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":4,"id":{"name":"std_unicode","disambiguator":[17905471521160427031,371260515587834027]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[11150755745482094334,719635517261601720]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":12,"id":{"name":"libc","disambiguator":[7641714553669186132,17489477030554114137]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":9,"id":{"name":"alloc_jemalloc","disambiguator":[1861138583033124199,6520321624619287261]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[6042488491239327452,16464525334708618473]}},{"file_name":"/Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","num":3,"id":{"name":"alloc","disambiguator":[18019394939438738377,3379744934773716244]}}],"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":30756,"line_start":1,"line_end":925,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":178},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4493,"byte_end":4508,"line_start":136,"line_end":136,"column_start":21,"column_end":36},"name":"FullAcAutomaton","value":""}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":30756,"line_start":1,"line_end":925,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"Users/pete/.cargo/registry/src/github.com-1ecc6299db9ec823/aho-corasick-0.6.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":65},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":105},{"krate":0,"index":112},{"krate":0,"index":116},{"krate":0,"index":121},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":188},{"krate":0,"index":192},{"krate":0,"index":195},{"krate":0,"index":193},{"krate":0,"index":126},{"krate":0,"index":197},{"krate":0,"index":200},{"krate":0,"index":198},{"krate":0,"index":131},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":151},{"krate":0,"index":152}],"decl_id":null,"docs":"An implementation of the\n[Aho-Corasick string search algorithm](https://en.wikipedia.org/wiki/Aho%E2%80%93Corasick_string_matching_algorithm).","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4143,"byte_end":4165,"line_start":121,"line_end":121,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":28},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":31077,"byte_end":31086,"line_start":11,"line_end":11,"column_start":11,"column_end":20},"name":"Automaton","qualname":"::autiter::Automaton","value":"Automaton<P>","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40}],"decl_id":null,"docs":" An abstraction over automatons and their corresponding iterators.\n The type parameter `P` is the type of the pattern that was used to\n construct this Automaton.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":31173,"byte_end":31183,"line_start":13,"line_end":13,"column_start":8,"column_end":18},"name":"next_state","qualname":"::autiter::Automaton::next_state","value":"fn (&self, si: StateIdx, b: u8) -> StateIdx","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" An abstraction over automatons and their corresponding iterators.\n The type parameter `P` is the type of the pattern that was used to\n construct this Automaton.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":31336,"byte_end":31345,"line_start":17,"line_end":17,"column_start":8,"column_end":17},"name":"has_match","qualname":"::autiter::Automaton::has_match","value":"fn (&self, si: StateIdx, outi: usize) -> bool","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" An abstraction over automatons and their corresponding iterators.\n The type parameter `P` is the type of the pattern that was used to\n construct this Automaton.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":31475,"byte_end":31484,"line_start":20,"line_end":20,"column_start":8,"column_end":17},"name":"get_match","qualname":"::autiter::Automaton::get_match","value":"fn (&self, si: StateIdx, outi: usize, texti: usize) -> Match","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" An abstraction over automatons and their corresponding iterators.\n The type parameter `P` is the type of the pattern that was used to\n construct this Automaton.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":31624,"byte_end":31635,"line_start":23,"line_end":23,"column_start":8,"column_end":19},"name":"start_bytes","qualname":"::autiter::Automaton::start_bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" An abstraction over automatons and their corresponding iterators.\n The type parameter `P` is the type of the pattern that was used to\n construct this Automaton.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":31805,"byte_end":31813,"line_start":28,"line_end":28,"column_start":8,"column_end":16},"name":"patterns","qualname":"::autiter::Automaton::patterns","value":"fn (&self) -> &[P]","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" An abstraction over automatons and their corresponding iterators.\n The type parameter `P` is the type of the pattern that was used to\n construct this Automaton.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":32010,"byte_end":32017,"line_start":34,"line_end":34,"column_start":8,"column_end":15},"name":"pattern","qualname":"::autiter::Automaton::pattern","value":"fn (&self, i: usize) -> &P","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" An abstraction over automatons and their corresponding iterators.\n The type parameter `P` is the type of the pattern that was used to\n construct this Automaton.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":35},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":32120,"byte_end":32123,"line_start":38,"line_end":38,"column_start":8,"column_end":11},"name":"len","qualname":"::autiter::Automaton::len","value":"fn (&self) -> usize","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" An abstraction over automatons and their corresponding iterators.\n The type parameter `P` is the type of the pattern that was used to\n construct this Automaton.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":32255,"byte_end":32263,"line_start":44,"line_end":44,"column_start":8,"column_end":16},"name":"is_empty","qualname":"::autiter::Automaton::is_empty","value":"fn (&self) -> bool","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" An abstraction over automatons and their corresponding iterators.\n The type parameter `P` is the type of the pattern that was used to\n construct this Automaton.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":32382,"byte_end":32386,"line_start":49,"line_end":49,"column_start":8,"column_end":12},"name":"find","qualname":"::autiter::Automaton::find","value":"fn <'a, 's, Q> (&'a self, s: &'s Q) -> Matches<'a, 's, P, Self>","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" An abstraction over automatons and their corresponding iterators.\n The type parameter `P` is the type of the pattern that was used to\n construct this Automaton.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":32748,"byte_end":32764,"line_start":64,"line_end":64,"column_start":8,"column_end":24},"name":"find_overlapping","qualname":"::autiter::Automaton::find_overlapping","value":"fn <'a, 's, Q> (&'a self, s: &'s Q) -> MatchesOverlapping<'a, 's, P, Self>","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" An abstraction over automatons and their corresponding iterators.\n The type parameter `P` is the type of the pattern that was used to\n construct this Automaton.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":33186,"byte_end":33197,"line_start":80,"line_end":80,"column_start":8,"column_end":19},"name":"stream_find","qualname":"::autiter::Automaton::stream_find","value":"fn <'a, R> (&'a self, rdr: R) -> StreamMatches<'a, R, P, Self>","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" An abstraction over automatons and their corresponding iterators.\n The type parameter `P` is the type of the pattern that was used to\n construct this Automaton.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":33577,"byte_end":33600,"line_start":95,"line_end":95,"column_start":8,"column_end":31},"name":"stream_find_overlapping","qualname":"::autiter::Automaton::stream_find_overlapping","value":"fn <'a, R> (&'a self, rdr: R) -> StreamMatchesOverlapping<'a, R, P, Self>","parent":{"krate":0,"index":28},"children":[],"decl_id":null,"docs":" An abstraction over automatons and their corresponding iterators.\n The type parameter `P` is the type of the pattern that was used to\n construct this Automaton.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":153},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":34691,"byte_end":34696,"line_start":140,"line_end":140,"column_start":12,"column_end":17},"name":"Match","qualname":"::autiter::Match","value":"Match { pati, start, end }","parent":null,"children":[{"krate":0,"index":2147483740},{"krate":0,"index":2147483741},{"krate":0,"index":2147483742}],"decl_id":null,"docs":" Records a match in the search text.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":34680,"byte_end":35198,"line_start":140,"line_end":153,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":34680,"byte_end":35198,"line_start":140,"line_end":153,"column_start":1,"column_end":2}}]},{"kind":"Field","id":{"krate":0,"index":2147483740},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":34865,"byte_end":34869,"line_start":145,"line_end":145,"column_start":9,"column_end":13},"name":"pati","qualname":"::autiter::Match::pati","value":"usize","parent":{"krate":0,"index":153},"children":[],"decl_id":null,"docs":" The pattern index.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147483741},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":34952,"byte_end":34957,"line_start":147,"line_end":147,"column_start":9,"column_end":14},"name":"start","qualname":"::autiter::Match::start","value":"usize","parent":{"krate":0,"index":153},"children":[],"decl_id":null,"docs":" The starting byte offset of the match in the search text.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2147483742},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":35185,"byte_end":35188,"line_start":152,"line_end":152,"column_start":9,"column_end":12},"name":"end","qualname":"::autiter::Match::end","value":"usize","parent":{"krate":0,"index":153},"children":[],"decl_id":null,"docs":" The ending byte offset of the match in the search text.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":166},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":35476,"byte_end":35483,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"Matches","qualname":"::autiter::Matches","value":"Matches {  }","parent":null,"children":[{"krate":0,"index":2147483744},{"krate":0,"index":2147483745},{"krate":0,"index":2147483746},{"krate":0,"index":2147483747},{"krate":0,"index":2147483748}],"decl_id":null,"docs":" An iterator of non-overlapping matches for in-memory text.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":169},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":41763,"byte_end":41776,"line_start":365,"line_end":365,"column_start":12,"column_end":25},"name":"StreamMatches","qualname":"::autiter::StreamMatches","value":"StreamMatches {  }","parent":null,"children":[{"krate":0,"index":2147483757},{"krate":0,"index":2147483758},{"krate":0,"index":2147483759},{"krate":0,"index":2147483760},{"krate":0,"index":2147483761}],"decl_id":null,"docs":" An iterator of non-overlapping matches for streaming text.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":172},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":43274,"byte_end":43292,"line_start":412,"line_end":412,"column_start":12,"column_end":30},"name":"MatchesOverlapping","qualname":"::autiter::MatchesOverlapping","value":"MatchesOverlapping {  }","parent":null,"children":[{"krate":0,"index":2147483770},{"krate":0,"index":2147483771},{"krate":0,"index":2147483772},{"krate":0,"index":2147483773},{"krate":0,"index":2147483774},{"krate":0,"index":2147483775}],"decl_id":null,"docs":" An iterator of overlapping matches for in-memory text.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":175},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":45468,"byte_end":45492,"line_start":479,"line_end":479,"column_start":12,"column_end":36},"name":"StreamMatchesOverlapping","qualname":"::autiter::StreamMatchesOverlapping","value":"StreamMatchesOverlapping {  }","parent":null,"children":[{"krate":0,"index":2147483784},{"krate":0,"index":2147483785},{"krate":0,"index":2147483786},{"krate":0,"index":2147483787},{"krate":0,"index":2147483788},{"krate":0,"index":2147483789}],"decl_id":null,"docs":" An iterator of overlapping matches for streaming text.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":178},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,102,117,108,108,46,114,115],"byte_start":47798,"byte_end":47813,"line_start":20,"line_end":20,"column_start":12,"column_end":27},"name":"FullAcAutomaton","qualname":"::full::FullAcAutomaton","value":"FullAcAutomaton {  }","parent":null,"children":[{"krate":0,"index":2147483798},{"krate":0,"index":2147483799},{"krate":0,"index":2147483800},{"krate":0,"index":2147483801}],"decl_id":null,"docs":" A complete Aho-Corasick automaton.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,102,117,108,108,46,114,115],"byte_start":48132,"byte_end":48135,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FullAcAutomaton<P>>::new","value":"fn <T> (ac: AcAutomaton<P, T>) -> FullAcAutomaton<P>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,102,117,108,108,46,114,115],"byte_start":48567,"byte_end":48579,"line_start":44,"line_end":44,"column_start":12,"column_end":24},"name":"memory_usage","qualname":"<FullAcAutomaton<P>>::memory_usage","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,102,117,108,108,46,114,115],"byte_start":48941,"byte_end":48951,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"heap_bytes","qualname":"<FullAcAutomaton<P>>::heap_bytes","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,102,117,108,108,46,114,115],"byte_start":49497,"byte_end":49507,"line_start":74,"line_end":74,"column_start":12,"column_end":22},"name":"num_states","qualname":"<FullAcAutomaton<P>>::num_states","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":94},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4934,"byte_end":4942,"line_start":150,"line_end":150,"column_start":10,"column_end":18},"name":"StateIdx","qualname":"::StateIdx","value":"u32","parent":null,"children":[],"decl_id":null,"docs":" The integer type used for the state index.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":181},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6564,"byte_end":6575,"line_start":186,"line_end":186,"column_start":12,"column_end":23},"name":"AcAutomaton","qualname":"::AcAutomaton","value":"AcAutomaton {  }","parent":null,"children":[{"krate":0,"index":2147483804},{"krate":0,"index":2147483805},{"krate":0,"index":2147483806}],"decl_id":null,"docs":" An Aho-Corasick finite automaton.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6981,"byte_end":6984,"line_start":205,"line_end":205,"column_start":12,"column_end":15},"name":"new","qualname":"<AcAutomaton<P>>::new","value":"fn <I> (pats: I) -> AcAutomaton<P, Dense>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7432,"byte_end":7448,"line_start":218,"line_end":218,"column_start":12,"column_end":28},"name":"with_transitions","qualname":"<AcAutomaton<P, T>>::with_transitions","value":"fn <I> (pats: I) -> AcAutomaton<P, T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8017,"byte_end":8026,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"into_full","qualname":"<AcAutomaton<P, T>>::into_full","value":"fn (self) -> FullAcAutomaton<P>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8129,"byte_end":8139,"line_start":236,"line_end":236,"column_start":12,"column_end":22},"name":"num_states","qualname":"<AcAutomaton<P, T>>::num_states","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8221,"byte_end":8231,"line_start":241,"line_end":241,"column_start":12,"column_end":22},"name":"heap_bytes","qualname":"<AcAutomaton<P, T>>::heap_bytes","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":121},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13735,"byte_end":13746,"line_start":410,"line_end":410,"column_start":11,"column_end":22},"name":"Transitions","qualname":"::Transitions","value":"Transitions","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125}],"decl_id":null,"docs":" An abstraction over state transition strategies.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13803,"byte_end":13806,"line_start":412,"line_end":412,"column_start":8,"column_end":11},"name":"new","qualname":"::Transitions::new","value":"fn (depth: u32) -> Self","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" An abstraction over state transition strategies.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13897,"byte_end":13901,"line_start":414,"line_end":414,"column_start":8,"column_end":12},"name":"goto","qualname":"::Transitions::goto","value":"fn (&self, alpha: u8) -> StateIdx","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" An abstraction over state transition strategies.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13998,"byte_end":14006,"line_start":416,"line_end":416,"column_start":8,"column_end":16},"name":"set_goto","qualname":"::Transitions::set_goto","value":"fn (&mut self, alpha: u8, si: StateIdx) -> ()","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" An abstraction over state transition strategies.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14125,"byte_end":14135,"line_start":418,"line_end":418,"column_start":8,"column_end":18},"name":"heap_bytes","qualname":"::Transitions::heap_bytes","value":"fn (&self) -> usize","parent":{"krate":0,"index":121},"children":[],"decl_id":null,"docs":" An abstraction over state transition strategies.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":187},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14328,"byte_end":14333,"line_start":425,"line_end":425,"column_start":12,"column_end":17},"name":"Dense","qualname":"::Dense","value":"","parent":null,"children":[],"decl_id":null,"docs":" State transitions that can be stored either sparsely or densely.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":197},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15687,"byte_end":15693,"line_start":476,"line_end":476,"column_start":12,"column_end":18},"name":"Sparse","qualname":"::Sparse","value":"","parent":null,"children":[],"decl_id":null,"docs":" State transitions that are always sparse.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17851,"byte_end":17854,"line_start":550,"line_end":550,"column_start":12,"column_end":15},"name":"dot","qualname":"<AcAutomaton<String, T>>::dot","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":39980,"byte_end":39987,"line_start":318,"line_end":318,"column_start":56,"column_end":63},"kind":"Impl","from":{"krate":0,"index":166},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":41989,"byte_end":42002,"line_start":374,"line_end":374,"column_start":22,"column_end":35},"kind":"Impl","from":{"krate":0,"index":169},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":43516,"byte_end":43534,"line_start":422,"line_end":422,"column_start":22,"column_end":40},"kind":"Impl","from":{"krate":0,"index":172},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,97,117,116,105,116,101,114,46,114,115],"byte_start":45731,"byte_end":45755,"line_start":489,"line_end":489,"column_start":22,"column_end":46},"kind":"Impl","from":{"krate":0,"index":175},"to":{"krate":2,"index":1686}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,102,117,108,108,46,114,115],"byte_start":47999,"byte_end":48014,"line_start":27,"line_end":27,"column_start":22,"column_end":37},"kind":"Impl","from":{"krate":0,"index":178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,102,117,108,108,46,114,115],"byte_start":49596,"byte_end":49611,"line_start":79,"line_end":79,"column_start":39,"column_end":54},"kind":"Impl","from":{"krate":0,"index":178},"to":{"krate":0,"index":28}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,102,117,108,108,46,114,115],"byte_start":50570,"byte_end":50585,"line_start":119,"line_end":119,"column_start":22,"column_end":37},"kind":"Impl","from":{"krate":0,"index":178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,102,117,108,108,46,114,115],"byte_start":51025,"byte_end":51040,"line_start":132,"line_end":132,"column_start":50,"column_end":65},"kind":"Impl","from":{"krate":0,"index":178},"to":{"krate":2,"index":3471}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6793,"byte_end":6804,"line_start":200,"line_end":200,"column_start":22,"column_end":33},"kind":"Impl","from":{"krate":0,"index":181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7156,"byte_end":7167,"line_start":211,"line_end":211,"column_start":38,"column_end":49},"kind":"Impl","from":{"krate":0,"index":181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8601,"byte_end":8612,"line_start":252,"line_end":252,"column_start":55,"column_end":66},"kind":"Impl","from":{"krate":0,"index":181},"to":{"krate":0,"index":28}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9944,"byte_end":9955,"line_start":304,"line_end":304,"column_start":38,"column_end":49},"kind":"Impl","from":{"krate":0,"index":181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12964,"byte_end":12969,"line_start":379,"line_end":379,"column_start":22,"column_end":27},"kind":"Impl","from":{"krate":0,"index":184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14498,"byte_end":14503,"line_start":433,"line_end":433,"column_start":22,"column_end":27},"kind":"Impl","from":{"krate":0,"index":187},"to":{"krate":0,"index":121}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15732,"byte_end":15738,"line_start":478,"line_end":478,"column_start":22,"column_end":28},"kind":"Impl","from":{"krate":0,"index":197},"to":{"krate":0,"index":121}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16097,"byte_end":16108,"line_start":497,"line_end":497,"column_start":42,"column_end":53},"kind":"Impl","from":{"krate":0,"index":181},"to":{"krate":2,"index":1845}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16490,"byte_end":16501,"line_start":508,"line_end":508,"column_start":24,"column_end":35},"kind":"Impl","from":{"krate":0,"index":181},"to":{"krate":2,"index":3471}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16972,"byte_end":16977,"line_start":521,"line_end":521,"column_start":22,"column_end":27},"kind":"Impl","from":{"krate":0,"index":184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17653,"byte_end":17658,"line_start":542,"line_end":542,"column_start":37,"column_end":42},"kind":"Impl","from":{"krate":0,"index":184},"to":{"krate":2,"index":3471}},{"span":{"file_name":[85,115,101,114,115,47,112,101,116,101,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,97,104,111,45,99,111,114,97,115,105,99,107,45,48,46,54,46,52,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17796,"byte_end":17807,"line_start":548,"line_end":548,"column_start":22,"column_end":33},"kind":"Impl","from":{"krate":0,"index":181},"to":{"krate":4294967295,"index":4294967295}}]}